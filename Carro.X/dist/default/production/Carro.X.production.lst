

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jun 21 06:51:38 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 1.45
    39                           ; Generated 16/11/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     
    73                           	psect	nvCOMRAM
    74  00005B                     __pnvCOMRAM:
    75                           	opt stack 0
    76  00005B                     _fre:
    77                           	opt stack 0
    78  00005B                     	ds	2
    79  0000                     _RCREG	set	4014
    80  0000                     _TXREG	set	4013
    81  0000                     _SPBRG	set	4015
    82  0000                     _PORTDbits	set	3971
    83  0000                     _CCPR2L	set	4027
    84  0000                     _CCPR1L	set	4030
    85  0000                     _PR2	set	4043
    86  0000                     _TRISD1	set	31913
    87  0000                     _TRISD0	set	31912
    88  0000                     _TRMT	set	32097
    89  0000                     _PEIE	set	32662
    90  0000                     _GIE	set	32663
    91  0000                     _RCIF	set	31989
    92  0000                     _RCIE	set	31981
    93  0000                     _TRISC7	set	31911
    94  0000                     _TRISC6	set	31910
    95  0000                     _SPEN	set	32095
    96  0000                     _RX9	set	32094
    97  0000                     _CREN	set	32092
    98  0000                     _TX9	set	32102
    99  0000                     _TXEN	set	32101
   100  0000                     _SYNC	set	32100
   101  0000                     _BRGH	set	32098
   102  0000                     _TMR2ON	set	32338
   103  0000                     _T2CKPS1	set	32337
   104  0000                     _T2CKPS0	set	32336
   105  0000                     _CCP2M2	set	32210
   106  0000                     _CCP2M3	set	32211
   107  0000                     _CCP1M2	set	32234
   108  0000                     _CCP1M3	set	32235
   109  0000                     _TRISC1	set	31905
   110  0000                     _TRISC2	set	31906
   111  0000                     _DC2B0	set	32212
   112  0000                     _DC2B1	set	32213
   113  0000                     _DC1B0	set	32236
   114  0000                     _DC1B1	set	32237
   115                           
   116                           ; #config settings
   117  0000                     
   118                           	psect	cinit
   119  000AE0                     __pcinit:
   120                           	opt stack 0
   121  000AE0                     start_initialization:
   122                           	opt stack 0
   123  000AE0                     __initialization:
   124                           	opt stack 0
   125  000AE0                     end_of_initialization:
   126                           	opt stack 0
   127  000AE0                     __end_of__initialization:
   128                           	opt stack 0
   129  000AE0  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   130  000AE2  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   131  000AE4  0100               	movlb	0
   132  000AE6  EF08  F005         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	cstackBANK0
   135  000060                     __pcstackBANK0:
   136                           	opt stack 0
   137  000060                     ?___aldiv:
   138                           	opt stack 0
   139  000060                     ?___lldiv:
   140                           	opt stack 0
   141  000060                     ___aldiv@dividend:
   142                           	opt stack 0
   143  000060                     ___lldiv@dividend:
   144                           	opt stack 0
   145                           
   146                           ; 4 bytes @ 0x0
   147  000060                     	ds	4
   148  000064                     ___aldiv@divisor:
   149                           	opt stack 0
   150  000064                     ___lldiv@divisor:
   151                           	opt stack 0
   152                           
   153                           ; 4 bytes @ 0x4
   154  000064                     	ds	4
   155  000068                     ___aldiv@counter:
   156                           	opt stack 0
   157  000068                     ___lldiv@quotient:
   158                           	opt stack 0
   159                           
   160                           ; 4 bytes @ 0x8
   161  000068                     	ds	1
   162  000069                     ___aldiv@sign:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x9
   166  000069                     	ds	1
   167  00006A                     ___aldiv@quotient:
   168                           	opt stack 0
   169                           
   170                           ; 4 bytes @ 0xA
   171  00006A                     	ds	2
   172  00006C                     ___lldiv@counter:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0xC
   176  00006C                     	ds	1
   177  00006D                     init_USART@baudrate:
   178                           	opt stack 0
   179                           
   180                           ; 4 bytes @ 0xD
   181  00006D                     	ds	1
   182  00006E                     PWM_init@freq:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0xE
   186  00006E                     	ds	2
   187  000070                     ??_PWM_init:
   188                           
   189                           ; 1 bytes @ 0x10
   190  000070                     	ds	1
   191  000071                     ??_init_USART:
   192                           
   193                           ; 1 bytes @ 0x11
   194  000071                     	ds	4
   195  000075                     main@i:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x15
   199  000075                     	ds	2
   200                           
   201                           	psect	cstackCOMRAM
   202  000001                     __pcstackCOMRAM:
   203                           	opt stack 0
   204  000001                     ?___ftpack:
   205                           	opt stack 0
   206  000001                     ?i2___aldiv:
   207                           	opt stack 0
   208  000001                     sendMsg@msg:
   209                           	opt stack 0
   210  000001                     ___ftpack@arg:
   211                           	opt stack 0
   212  000001                     i2___aldiv@dividend:
   213                           	opt stack 0
   214                           
   215                           ; 4 bytes @ 0x0
   216  000001                     	ds	3
   217  000004                     ___ftpack@exp:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x3
   221  000004                     	ds	1
   222  000005                     ___ftpack@sign:
   223                           	opt stack 0
   224  000005                     i2___aldiv@divisor:
   225                           	opt stack 0
   226                           
   227                           ; 4 bytes @ 0x4
   228  000005                     	ds	1
   229  000006                     ??___ftpack:
   230                           
   231                           ; 1 bytes @ 0x5
   232  000006                     	ds	3
   233  000009                     i2___aldiv@counter:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x8
   237  000009                     	ds	1
   238  00000A                     i2___aldiv@sign:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x9
   242  00000A                     	ds	1
   243  00000B                     i2___aldiv@quotient:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0xA
   247  00000B                     	ds	4
   248  00000F                     ?_PWM_Max_Duty:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0xE
   252  00000F                     	ds	2
   253  000011                     ??_PWM_Max_Duty:
   254                           
   255                           ; 1 bytes @ 0x10
   256  000011                     	ds	2
   257  000013                     ?___lwtoft:
   258                           	opt stack 0
   259  000013                     ___lwtoft@c:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x12
   263  000013                     	ds	3
   264  000016                     ?___ftdiv:
   265                           	opt stack 0
   266  000016                     ___ftdiv@f1:
   267                           	opt stack 0
   268                           
   269                           ; 3 bytes @ 0x15
   270  000016                     	ds	3
   271  000019                     ___ftdiv@f2:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0x18
   275  000019                     	ds	3
   276  00001C                     ??___ftdiv:
   277                           
   278                           ; 1 bytes @ 0x1B
   279  00001C                     	ds	3
   280  00001F                     ___ftdiv@cntr:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x1E
   284  00001F                     	ds	1
   285  000020                     ___ftdiv@f3:
   286                           	opt stack 0
   287                           
   288                           ; 3 bytes @ 0x1F
   289  000020                     	ds	3
   290  000023                     ___ftdiv@exp:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0x22
   294  000023                     	ds	1
   295  000024                     ___ftdiv@sign:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x23
   299  000024                     	ds	1
   300  000025                     ?___ftmul:
   301                           	opt stack 0
   302  000025                     ___ftmul@f1:
   303                           	opt stack 0
   304                           
   305                           ; 3 bytes @ 0x24
   306  000025                     	ds	3
   307  000028                     ___ftmul@f2:
   308                           	opt stack 0
   309                           
   310                           ; 3 bytes @ 0x27
   311  000028                     	ds	3
   312  00002B                     ??___ftmul:
   313                           
   314                           ; 1 bytes @ 0x2A
   315  00002B                     	ds	3
   316  00002E                     ___ftmul@exp:
   317                           	opt stack 0
   318                           
   319                           ; 1 bytes @ 0x2D
   320  00002E                     	ds	1
   321  00002F                     ___ftmul@f3_as_product:
   322                           	opt stack 0
   323                           
   324                           ; 3 bytes @ 0x2E
   325  00002F                     	ds	3
   326  000032                     ___ftmul@cntr:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x31
   330  000032                     	ds	1
   331  000033                     ___ftmul@sign:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x32
   335  000033                     	ds	1
   336  000034                     ?___fttol:
   337                           	opt stack 0
   338  000034                     ___fttol@f1:
   339                           	opt stack 0
   340                           
   341                           ; 3 bytes @ 0x33
   342  000034                     	ds	4
   343  000038                     ??___fttol:
   344                           
   345                           ; 1 bytes @ 0x37
   346  000038                     	ds	5
   347  00003D                     ___fttol@sign1:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x3C
   351  00003D                     	ds	1
   352  00003E                     ___fttol@lval:
   353                           	opt stack 0
   354                           
   355                           ; 4 bytes @ 0x3D
   356  00003E                     	ds	4
   357  000042                     ___fttol@exp1:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x41
   361  000042                     	ds	1
   362  000043                     PWM1_duty@duty:
   363                           	opt stack 0
   364  000043                     PWM2_duty@duty:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x42
   368  000043                     	ds	2
   369  000045                     ??_PWM1_duty:
   370  000045                     ??_PWM2_duty:
   371                           
   372                           ; 1 bytes @ 0x44
   373  000045                     	ds	2
   374  000047                     ??_routine:
   375                           
   376                           ; 1 bytes @ 0x46
   377  000047                     	ds	20
   378                           
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 201 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  i               2   21[BANK0 ] int 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         0       0       0       0       0       0       0       0       0
   399 ;;      Locals:         0       2       0       0       0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0
   401 ;;      Totals:         0       2       0       0       0       0       0       0       0
   402 ;;Total ram usage:        2 bytes
   403 ;; Hardware stack levels required when called:    7
   404 ;; This function calls:
   405 ;;		_PWM_init
   406 ;;		_PWM_start
   407 ;;		_Parado
   408 ;;		_init_USART
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text0
   415  000A10                     __ptext0:
   416                           	opt stack 0
   417  000A10                     _main:
   418                           	opt stack 24
   419                           
   420                           ;main.c: 207: TRISD0 = 0;
   421                           
   422                           ;incstack = 0
   423  000A10  9095               	bcf	3989,0,c	;volatile
   424                           
   425                           ;main.c: 208: TRISD1 = 0;
   426  000A12  9295               	bcf	3989,1,c	;volatile
   427                           
   428                           ;main.c: 210: PORTDbits.RD0 = 1;
   429  000A14  8083               	bsf	3971,0,c	;volatile
   430                           
   431                           ;main.c: 211: PORTDbits.RD1 = 0;
   432  000A16  9283               	bcf	3971,1,c	;volatile
   433                           
   434                           ;main.c: 213: Parado();
   435  000A18  EC75  F005         	call	_Parado	;wreg free
   436                           
   437                           ;main.c: 214: int i = 25;
   438  000A1C  0E00               	movlw	0
   439  000A1E  0100               	movlb	0	; () banked
   440  000A20  6F76               	movwf	(main@i+1)& (0+255),b
   441  000A22  0E19               	movlw	25
   442  000A24  6F75               	movwf	main@i& (0+255),b
   443                           
   444                           ; BSR set to: 0
   445                           ;main.c: 215: PWM_init(976);
   446  000A26  0E03               	movlw	3
   447  000A28  6F6F               	movwf	(PWM_init@freq+1)& (0+255),b
   448  000A2A  0ED0               	movlw	208
   449  000A2C  6F6E               	movwf	PWM_init@freq& (0+255),b
   450  000A2E  ECBA  F004         	call	_PWM_init	;wreg free
   451                           
   452                           ;main.c: 216: PWM_start();
   453  000A32  EC60  F005         	call	_PWM_start	;wreg free
   454                           
   455                           ;main.c: 217: init_USART(9600);
   456  000A36  0E80               	movlw	128
   457  000A38  0100               	movlb	0	; () banked
   458  000A3A  6F6D               	movwf	init_USART@baudrate& (0+255),b
   459  000A3C  0E25               	movlw	37
   460  000A3E  6F6E               	movwf	(init_USART@baudrate+1)& (0+255),b
   461  000A40  0E00               	movlw	0
   462  000A42  6F6F               	movwf	(init_USART@baudrate+2)& (0+255),b
   463  000A44  0E00               	movlw	0
   464  000A46  6F70               	movwf	(init_USART@baudrate+3)& (0+255),b
   465  000A48  EC86  F004         	call	_init_USART	;wreg free
   466  000A4C                     l142:
   467  000A4C  D7FF               	goto	l142
   468  000A4E                     __end_of_main:
   469                           	opt stack 0
   470                           
   471 ;; *************** function _init_USART *****************
   472 ;; Defined at:
   473 ;;		line 124 in file "main.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  baudrate        4   13[BANK0 ] unsigned long 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       4       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       4       0       0       0       0       0       0       0
   490 ;;      Totals:         0       8       0       0       0       0       0       0       0
   491 ;;Total ram usage:        8 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    6
   494 ;; This function calls:
   495 ;;		___lldiv
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text1
   502  00090C                     __ptext1:
   503                           	opt stack 0
   504  00090C                     _init_USART:
   505                           	opt stack 24
   506                           
   507                           ;main.c: 127: SPBRG = (16000000/(baudrate*64)) - 1;
   508                           
   509                           ;incstack = 0
   510  00090C  0E00               	movlw	0
   511  00090E  0100               	movlb	0	; () banked
   512  000910  6F60               	movwf	___lldiv@dividend& (0+255),b
   513  000912  0E24               	movlw	36
   514  000914  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
   515  000916  0EF4               	movlw	244
   516  000918  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
   517  00091A  0E00               	movlw	0
   518  00091C  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
   519  00091E  C06D  F071         	movff	init_USART@baudrate,??_init_USART
   520  000922  C06E  F072         	movff	init_USART@baudrate+1,??_init_USART+1
   521  000926  C06F  F073         	movff	init_USART@baudrate+2,??_init_USART+2
   522  00092A  C070  F074         	movff	init_USART@baudrate+3,??_init_USART+3
   523  00092E  0E06               	movlw	6
   524  000930                     u1045:
   525  000930  90D8               	bcf	status,0,c
   526  000932  3771               	rlcf	??_init_USART& (0+255),f,b
   527  000934  3772               	rlcf	(??_init_USART+1)& (0+255),f,b
   528  000936  3773               	rlcf	(??_init_USART+2)& (0+255),f,b
   529  000938  3774               	rlcf	(??_init_USART+3)& (0+255),f,b
   530  00093A  2EE8               	decfsz	wreg,f,c
   531  00093C  D7F9               	goto	u1045
   532  00093E  C071  F064         	movff	??_init_USART,___lldiv@divisor
   533  000942  C072  F065         	movff	??_init_USART+1,___lldiv@divisor+1
   534  000946  C073  F066         	movff	??_init_USART+2,___lldiv@divisor+2
   535  00094A  C074  F067         	movff	??_init_USART+3,___lldiv@divisor+3
   536  00094E  EC44  F004         	call	___lldiv	;wreg free
   537  000952  0100               	movlb	0	; () banked
   538  000954  0560               	decf	?___lldiv& (0+255),w,b
   539  000956  6EAF               	movwf	4015,c	;volatile
   540                           
   541                           ; BSR set to: 0
   542                           ;main.c: 130: BRGH = 0;
   543  000958  94AC               	bcf	4012,2,c	;volatile
   544                           
   545                           ; BSR set to: 0
   546                           ;main.c: 131: SYNC = 0;
   547  00095A  98AC               	bcf	4012,4,c	;volatile
   548                           
   549                           ; BSR set to: 0
   550                           ;main.c: 132: TXEN = 1;
   551  00095C  8AAC               	bsf	4012,5,c	;volatile
   552                           
   553                           ; BSR set to: 0
   554                           ;main.c: 133: TX9 = 0;
   555  00095E  9CAC               	bcf	4012,6,c	;volatile
   556                           
   557                           ; BSR set to: 0
   558                           ;main.c: 136: CREN = 1;
   559  000960  88AB               	bsf	4011,4,c	;volatile
   560                           
   561                           ; BSR set to: 0
   562                           ;main.c: 137: RX9 = 0;
   563  000962  9CAB               	bcf	4011,6,c	;volatile
   564                           
   565                           ; BSR set to: 0
   566                           ;main.c: 138: SPEN = 1;
   567  000964  8EAB               	bsf	4011,7,c	;volatile
   568                           
   569                           ; BSR set to: 0
   570                           ;main.c: 141: TRISC6 = 0;
   571  000966  9C94               	bcf	3988,6,c	;volatile
   572                           
   573                           ; BSR set to: 0
   574                           ;main.c: 142: TRISC7 = 1;
   575  000968  8E94               	bsf	3988,7,c	;volatile
   576                           
   577                           ; BSR set to: 0
   578                           ;main.c: 144: RCIE = 1;
   579  00096A  8A9D               	bsf	3997,5,c	;volatile
   580                           
   581                           ; BSR set to: 0
   582                           ;main.c: 145: RCIF = 0;
   583  00096C  9A9E               	bcf	3998,5,c	;volatile
   584                           
   585                           ; BSR set to: 0
   586                           ;main.c: 146: GIE = 1;
   587  00096E  8EF2               	bsf	intcon,7,c	;volatile
   588                           
   589                           ; BSR set to: 0
   590                           ;main.c: 147: PEIE = 1;
   591  000970  8CF2               	bsf	intcon,6,c	;volatile
   592                           
   593                           ; BSR set to: 0
   594  000972  0012               	return		;funcret
   595  000974                     __end_of_init_USART:
   596                           	opt stack 0
   597                           intcon	equ	0xFF2
   598                           wreg	equ	0xFE8
   599                           status	equ	0xFD8
   600                           
   601 ;; *************** function ___lldiv *****************
   602 ;; Defined at:
   603 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  dividend        4    0[BANK0 ] unsigned long 
   606 ;;  divisor         4    4[BANK0 ] unsigned long 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  quotient        4    8[BANK0 ] unsigned long 
   609 ;;  counter         1   12[BANK0 ] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  4    0[BANK0 ] unsigned long 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       8       0       0       0       0       0       0       0
   620 ;;      Locals:         0       5       0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0
   622 ;;      Totals:         0      13       0       0       0       0       0       0       0
   623 ;;Total ram usage:       13 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    5
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_init_USART
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text2
   634  000888                     __ptext2:
   635                           	opt stack 0
   636  000888                     ___lldiv:
   637                           	opt stack 24
   638                           
   639                           ; BSR set to: 0
   640                           ;incstack = 0
   641  000888  0E00               	movlw	0
   642  00088A  0100               	movlb	0	; () banked
   643  00088C  6F68               	movwf	___lldiv@quotient& (0+255),b
   644  00088E  0E00               	movlw	0
   645  000890  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
   646  000892  0E00               	movlw	0
   647  000894  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
   648  000896  0E00               	movlw	0
   649  000898  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
   650                           
   651                           ; BSR set to: 0
   652  00089A  5164               	movf	___lldiv@divisor& (0+255),w,b
   653  00089C  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
   654  00089E  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
   655  0008A0  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
   656  0008A2  B4D8               	btfsc	status,2,c
   657  0008A4  D02A               	goto	l501
   658                           
   659                           ; BSR set to: 0
   660  0008A6  0E01               	movlw	1
   661  0008A8  6F6C               	movwf	___lldiv@counter& (0+255),b
   662  0008AA  D006               	goto	l496
   663  0008AC                     
   664                           ; BSR set to: 0
   665                           
   666                           ; BSR set to: 0
   667  0008AC  90D8               	bcf	status,0,c
   668  0008AE  3764               	rlcf	___lldiv@divisor& (0+255),f,b
   669  0008B0  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
   670  0008B2  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
   671  0008B4  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
   672  0008B6  2B6C               	incf	___lldiv@counter& (0+255),f,b
   673  0008B8                     l496:
   674                           
   675                           ; BSR set to: 0
   676                           
   677                           ; BSR set to: 0
   678  0008B8  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
   679  0008BA  D7F8               	goto	l497
   680  0008BC                     u1020:
   681                           
   682                           ; BSR set to: 0
   683                           
   684                           ; BSR set to: 0
   685                           
   686                           ; BSR set to: 0
   687  0008BC  90D8               	bcf	status,0,c
   688  0008BE  3768               	rlcf	___lldiv@quotient& (0+255),f,b
   689  0008C0  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
   690  0008C2  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
   691  0008C4  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
   692                           
   693                           ; BSR set to: 0
   694  0008C6  5164               	movf	___lldiv@divisor& (0+255),w,b
   695  0008C8  5D60               	subwf	___lldiv@dividend& (0+255),w,b
   696  0008CA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   697  0008CC  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
   698  0008CE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   699  0008D0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
   700  0008D2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   701  0008D4  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
   702  0008D6  A0D8               	btfss	status,0,c
   703  0008D8  D009               	goto	l500
   704                           
   705                           ; BSR set to: 0
   706  0008DA  5164               	movf	___lldiv@divisor& (0+255),w,b
   707  0008DC  5F60               	subwf	___lldiv@dividend& (0+255),f,b
   708  0008DE  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   709  0008E0  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
   710  0008E2  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   711  0008E4  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
   712  0008E6  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   713  0008E8  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
   714                           
   715                           ; BSR set to: 0
   716  0008EA  8168               	bsf	___lldiv@quotient& (0+255),0,b
   717  0008EC                     l500:
   718                           
   719                           ; BSR set to: 0
   720                           
   721                           ; BSR set to: 0
   722  0008EC  90D8               	bcf	status,0,c
   723  0008EE  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
   724  0008F0  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
   725  0008F2  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
   726  0008F4  3364               	rrcf	___lldiv@divisor& (0+255),f,b
   727                           
   728                           ; BSR set to: 0
   729  0008F6  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
   730  0008F8  D7E1               	goto	u1020
   731  0008FA                     l501:
   732                           
   733                           ; BSR set to: 0
   734                           
   735                           ; BSR set to: 0
   736  0008FA  C068  F060         	movff	___lldiv@quotient,?___lldiv
   737  0008FE  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
   738  000902  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
   739  000906  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
   740                           
   741                           ; BSR set to: 0
   742  00090A  0012               	return		;funcret
   743  00090C                     __end_of___lldiv:
   744                           	opt stack 0
   745                           intcon	equ	0xFF2
   746                           wreg	equ	0xFE8
   747                           status	equ	0xFD8
   748                           
   749 ;; *************** function _Parado *****************
   750 ;; Defined at:
   751 ;;		line 116 in file "main.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;		None
   754 ;; Auto vars:     Size  Location     Type
   755 ;;		None
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		None
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   765 ;;      Params:         0       0       0       0       0       0       0       0       0
   766 ;;      Locals:         0       0       0       0       0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0
   768 ;;      Totals:         0       0       0       0       0       0       0       0       0
   769 ;;Total ram usage:        0 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; Hardware stack levels required when called:    5
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text3
   780  000AEA                     __ptext3:
   781                           	opt stack 0
   782  000AEA                     _Parado:
   783                           	opt stack 25
   784                           
   785                           ;main.c: 118: PORTDbits.RD0 = 0;
   786                           
   787                           ; BSR set to: 0
   788                           ;incstack = 0
   789  000AEA  9083               	bcf	3971,0,c	;volatile
   790                           
   791                           ;main.c: 119: PORTDbits.RD1 = 0;
   792  000AEC  9283               	bcf	3971,1,c	;volatile
   793  000AEE  0012               	return		;funcret
   794  000AF0                     __end_of_Parado:
   795                           	opt stack 0
   796                           intcon	equ	0xFF2
   797                           wreg	equ	0xFE8
   798                           status	equ	0xFD8
   799                           
   800 ;; *************** function _PWM_start *****************
   801 ;; Defined at:
   802 ;;		line 59 in file "main.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		None
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   816 ;;      Params:         0       0       0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    5
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text4
   831  000AC0                     __ptext4:
   832                           	opt stack 0
   833  000AC0                     _PWM_start:
   834                           	opt stack 25
   835                           
   836                           ;main.c: 61: TRISC2 = 0;
   837                           
   838                           ;incstack = 0
   839  000AC0  9494               	bcf	3988,2,c	;volatile
   840                           
   841                           ;main.c: 62: TRISC1 = 0;
   842  000AC2  9294               	bcf	3988,1,c	;volatile
   843                           
   844                           ;main.c: 64: CCP1M3 = 1;
   845  000AC4  86BD               	bsf	4029,3,c	;volatile
   846                           
   847                           ;main.c: 65: CCP1M2 = 1;
   848  000AC6  84BD               	bsf	4029,2,c	;volatile
   849                           
   850                           ;main.c: 66: CCP2M3 = 1;
   851  000AC8  86BA               	bsf	4026,3,c	;volatile
   852                           
   853                           ;main.c: 67: CCP2M2 = 1;
   854  000ACA  84BA               	bsf	4026,2,c	;volatile
   855                           
   856                           ;main.c: 79: T2CKPS0 = 1;
   857                           
   858                           ;main.c: 78: else if(16 == 16){
   859                           
   860                           ;main.c: 77: }
   861                           
   862                           ;main.c: 76: T2CKPS1 = 0;
   863                           
   864                           ;main.c: 75: T2CKPS0 = 1;
   865                           
   866                           ;main.c: 73: }
   867                           ;main.c: 74: if(16 == 4){
   868                           
   869                           ;main.c: 72: T2CKPS1 = 0;
   870                           
   871                           ;main.c: 71: T2CKPS0 = 0;
   872                           
   873                           ;main.c: 70: if(16 == 1){
   874  000ACC  80CA               	bsf	4042,0,c	;volatile
   875                           
   876                           ;main.c: 80: T2CKPS1 = 1;
   877  000ACE  82CA               	bsf	4042,1,c	;volatile
   878                           
   879                           ;main.c: 81: }
   880                           ;main.c: 83: TMR2ON = 1;
   881  000AD0  84CA               	bsf	4042,2,c	;volatile
   882  000AD2  0012               	return		;funcret
   883  000AD4                     __end_of_PWM_start:
   884                           	opt stack 0
   885                           intcon	equ	0xFF2
   886                           wreg	equ	0xFE8
   887                           status	equ	0xFD8
   888                           
   889 ;; *************** function _PWM_init *****************
   890 ;; Defined at:
   891 ;;		line 28 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  freq            2   14[BANK0 ] unsigned int 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         0       2       0       0       0       0       0       0       0
   906 ;;      Locals:         0       0       0       0       0       0       0       0       0
   907 ;;      Temps:          0       2       0       0       0       0       0       0       0
   908 ;;      Totals:         0       4       0       0       0       0       0       0       0
   909 ;;Total ram usage:        4 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    6
   912 ;; This function calls:
   913 ;;		___aldiv
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text5
   920  000974                     __ptext5:
   921                           	opt stack 0
   922  000974                     _PWM_init:
   923                           	opt stack 24
   924                           
   925                           ;main.c: 29: PR2 = (16000000/(freq*4*16)) - 1;
   926                           
   927                           ;incstack = 0
   928  000974  0E00               	movlw	0
   929  000976  0100               	movlb	0	; () banked
   930  000978  6F60               	movwf	___aldiv@dividend& (0+255),b
   931  00097A  0E24               	movlw	36
   932  00097C  6F61               	movwf	(___aldiv@dividend+1)& (0+255),b
   933  00097E  0EF4               	movlw	244
   934  000980  6F62               	movwf	(___aldiv@dividend+2)& (0+255),b
   935  000982  0E00               	movlw	0
   936  000984  6F63               	movwf	(___aldiv@dividend+3)& (0+255),b
   937  000986  C06E  F070         	movff	PWM_init@freq,??_PWM_init
   938  00098A  C06F  F071         	movff	PWM_init@freq+1,??_PWM_init+1
   939  00098E  90D8               	bcf	status,0,c
   940  000990  3770               	rlcf	??_PWM_init& (0+255),f,b
   941  000992  3771               	rlcf	(??_PWM_init+1)& (0+255),f,b
   942  000994  90D8               	bcf	status,0,c
   943  000996  3770               	rlcf	??_PWM_init& (0+255),f,b
   944  000998  3771               	rlcf	(??_PWM_init+1)& (0+255),f,b
   945  00099A  3B70               	swapf	??_PWM_init& (0+255),f,b
   946  00099C  3B71               	swapf	(??_PWM_init+1)& (0+255),f,b
   947  00099E  0EF0               	movlw	240
   948  0009A0  1771               	andwf	(??_PWM_init+1)& (0+255),f,b
   949  0009A2  5170               	movf	??_PWM_init& (0+255),w,b
   950  0009A4  0B0F               	andlw	15
   951  0009A6  1371               	iorwf	(??_PWM_init+1)& (0+255),f,b
   952  0009A8  0EF0               	movlw	240
   953  0009AA  1770               	andwf	??_PWM_init& (0+255),f,b
   954  0009AC  C070  F064         	movff	??_PWM_init,___aldiv@divisor
   955  0009B0  C071  F065         	movff	??_PWM_init+1,___aldiv@divisor+1
   956  0009B4  6B66               	clrf	(___aldiv@divisor+2)& (0+255),b
   957  0009B6  6B67               	clrf	(___aldiv@divisor+3)& (0+255),b
   958  0009B8  EC20  F003         	call	___aldiv	;wreg free
   959  0009BC  0100               	movlb	0	; () banked
   960  0009BE  0560               	decf	?___aldiv& (0+255),w,b
   961  0009C0  6ECB               	movwf	4043,c	;volatile
   962                           
   963                           ; BSR set to: 0
   964                           ;main.c: 30: fre = freq;
   965  0009C2  C06E  F05B         	movff	PWM_init@freq,_fre
   966  0009C6  C06F  F05C         	movff	PWM_init@freq+1,_fre+1
   967                           
   968                           ; BSR set to: 0
   969  0009CA  0012               	return		;funcret
   970  0009CC                     __end_of_PWM_init:
   971                           	opt stack 0
   972                           intcon	equ	0xFF2
   973                           wreg	equ	0xFE8
   974                           status	equ	0xFD8
   975                           
   976 ;; *************** function ___aldiv *****************
   977 ;; Defined at:
   978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  dividend        4    0[BANK0 ] long 
   981 ;;  divisor         4    4[BANK0 ] long 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  quotient        4   10[BANK0 ] long 
   984 ;;  sign            1    9[BANK0 ] unsigned char 
   985 ;;  counter         1    8[BANK0 ] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  4    0[BANK0 ] long 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         0       8       0       0       0       0       0       0       0
   996 ;;      Locals:         0       6       0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0
   998 ;;      Totals:         0      14       0       0       0       0       0       0       0
   999 ;;Total ram usage:       14 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    5
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_PWM_init
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text6
  1010  000640                     __ptext6:
  1011                           	opt stack 0
  1012  000640                     ___aldiv:
  1013                           	opt stack 24
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;incstack = 0
  1017  000640  0E00               	movlw	0
  1018  000642  0100               	movlb	0	; () banked
  1019  000644  6F69               	movwf	___aldiv@sign& (0+255),b
  1020                           
  1021                           ; BSR set to: 0
  1022  000646  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1023  000648  D00A               	goto	l201
  1024                           
  1025                           ; BSR set to: 0
  1026  00064A  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1027  00064C  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1028  00064E  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1029  000650  6D64               	negf	___aldiv@divisor& (0+255),b
  1030  000652  0E00               	movlw	0
  1031  000654  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1032  000656  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1033  000658  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1034                           
  1035                           ; BSR set to: 0
  1036  00065A  0E01               	movlw	1
  1037  00065C  6F69               	movwf	___aldiv@sign& (0+255),b
  1038  00065E                     l201:
  1039                           
  1040                           ; BSR set to: 0
  1041                           
  1042                           ; BSR set to: 0
  1043  00065E  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
  1044  000660  D00A               	goto	l202
  1045                           
  1046                           ; BSR set to: 0
  1047  000662  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1048  000664  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1049  000666  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1050  000668  6D60               	negf	___aldiv@dividend& (0+255),b
  1051  00066A  0E00               	movlw	0
  1052  00066C  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1053  00066E  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1054  000670  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1055                           
  1056                           ; BSR set to: 0
  1057  000672  0E01               	movlw	1
  1058  000674  1B69               	xorwf	___aldiv@sign& (0+255),f,b
  1059  000676                     l202:
  1060                           
  1061                           ; BSR set to: 0
  1062                           
  1063                           ; BSR set to: 0
  1064  000676  0E00               	movlw	0
  1065  000678  6F6A               	movwf	___aldiv@quotient& (0+255),b
  1066  00067A  0E00               	movlw	0
  1067  00067C  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1068  00067E  0E00               	movlw	0
  1069  000680  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1070  000682  0E00               	movlw	0
  1071  000684  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1072                           
  1073                           ; BSR set to: 0
  1074  000686  5164               	movf	___aldiv@divisor& (0+255),w,b
  1075  000688  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1076  00068A  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1077  00068C  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1078  00068E  B4D8               	btfsc	status,2,c
  1079  000690  D02A               	goto	l209
  1080                           
  1081                           ; BSR set to: 0
  1082  000692  0E01               	movlw	1
  1083  000694  6F68               	movwf	___aldiv@counter& (0+255),b
  1084  000696  D006               	goto	l204
  1085  000698                     
  1086                           ; BSR set to: 0
  1087                           
  1088                           ; BSR set to: 0
  1089  000698  90D8               	bcf	status,0,c
  1090  00069A  3764               	rlcf	___aldiv@divisor& (0+255),f,b
  1091  00069C  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1092  00069E  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1093  0006A0  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1094  0006A2  2B68               	incf	___aldiv@counter& (0+255),f,b
  1095  0006A4                     l204:
  1096                           
  1097                           ; BSR set to: 0
  1098                           
  1099                           ; BSR set to: 0
  1100  0006A4  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1101  0006A6  D7F8               	goto	l205
  1102  0006A8                     u980:
  1103                           
  1104                           ; BSR set to: 0
  1105                           
  1106                           ; BSR set to: 0
  1107                           
  1108                           ; BSR set to: 0
  1109  0006A8  90D8               	bcf	status,0,c
  1110  0006AA  376A               	rlcf	___aldiv@quotient& (0+255),f,b
  1111  0006AC  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1112  0006AE  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1113  0006B0  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1114                           
  1115                           ; BSR set to: 0
  1116  0006B2  5164               	movf	___aldiv@divisor& (0+255),w,b
  1117  0006B4  5D60               	subwf	___aldiv@dividend& (0+255),w,b
  1118  0006B6  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1119  0006B8  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1120  0006BA  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1121  0006BC  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1122  0006BE  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1123  0006C0  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1124  0006C2  A0D8               	btfss	status,0,c
  1125  0006C4  D009               	goto	l208
  1126                           
  1127                           ; BSR set to: 0
  1128  0006C6  5164               	movf	___aldiv@divisor& (0+255),w,b
  1129  0006C8  5F60               	subwf	___aldiv@dividend& (0+255),f,b
  1130  0006CA  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1131  0006CC  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1132  0006CE  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1133  0006D0  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1134  0006D2  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1135  0006D4  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1136                           
  1137                           ; BSR set to: 0
  1138  0006D6  816A               	bsf	___aldiv@quotient& (0+255),0,b
  1139  0006D8                     l208:
  1140                           
  1141                           ; BSR set to: 0
  1142                           
  1143                           ; BSR set to: 0
  1144  0006D8  90D8               	bcf	status,0,c
  1145  0006DA  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1146  0006DC  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1147  0006DE  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1148  0006E0  3364               	rrcf	___aldiv@divisor& (0+255),f,b
  1149                           
  1150                           ; BSR set to: 0
  1151  0006E2  2F68               	decfsz	___aldiv@counter& (0+255),f,b
  1152  0006E4  D7E1               	goto	u980
  1153  0006E6                     l209:
  1154                           
  1155                           ; BSR set to: 0
  1156                           
  1157                           ; BSR set to: 0
  1158                           
  1159                           ; BSR set to: 0
  1160  0006E6  5169               	movf	___aldiv@sign& (0+255),w,b
  1161  0006E8  B4D8               	btfsc	status,2,c
  1162  0006EA  D008               	goto	l210
  1163                           
  1164                           ; BSR set to: 0
  1165  0006EC  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1166  0006EE  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1167  0006F0  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1168  0006F2  6D6A               	negf	___aldiv@quotient& (0+255),b
  1169  0006F4  0E00               	movlw	0
  1170  0006F6  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1171  0006F8  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1172  0006FA  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1173  0006FC                     l210:
  1174                           
  1175                           ; BSR set to: 0
  1176                           
  1177                           ; BSR set to: 0
  1178  0006FC  C06A  F060         	movff	___aldiv@quotient,?___aldiv
  1179  000700  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
  1180  000704  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
  1181  000708  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
  1182  00070C  0012               	return	
  1183  00070E                     __end_of___aldiv:
  1184                           	opt stack 0
  1185                           intcon	equ	0xFF2
  1186                           wreg	equ	0xFE8
  1187                           status	equ	0xFD8
  1188                           
  1189 ;; *************** function _routine *****************
  1190 ;; Defined at:
  1191 ;;		line 157 in file "main.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, status,2, status,0, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1205 ;;      Params:         0       0       0       0       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1207 ;;      Temps:         20       0       0       0       0       0       0       0       0
  1208 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1209 ;;Total ram usage:       20 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    4
  1212 ;; This function calls:
  1213 ;;		_Frente
  1214 ;;		_Frente_Re
  1215 ;;		_Re
  1216 ;;		_curvaDir
  1217 ;;		_curvaEsq
  1218 ;;		_sendMsg
  1219 ;;		i2_Parado
  1220 ;; This function is called by:
  1221 ;;		Interrupt level 2
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	intcode
  1226  000008                     __pintcode:
  1227                           	opt stack 0
  1228  000008                     _routine:
  1229                           	opt stack 24
  1230                           
  1231                           ; BSR set to: 0
  1232                           ;incstack = 0
  1233  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1234  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
  1235                           intcon	equ	0xFF2
  1236                           wreg	equ	0xFE8
  1237                           status	equ	0xFD8
  1238                           
  1239                           	psect	intcode_body
  1240  000012                     __pintcode_body:
  1241                           	opt stack 24
  1242  000012                     int_func:
  1243                           	opt stack 24
  1244  000012  0006               	pop		; remove dummy address from shadow register refresh
  1245  000014  CFFA F049          	movff	pclath,??_routine+2
  1246  000018  CFFB F04A          	movff	pclatu,??_routine+3
  1247  00001C  CFE9 F04B          	movff	fsr0l,??_routine+4
  1248  000020  CFEA F04C          	movff	fsr0h,??_routine+5
  1249  000024  CFE1 F04D          	movff	fsr1l,??_routine+6
  1250  000028  CFE2 F04E          	movff	fsr1h,??_routine+7
  1251  00002C  CFD9 F04F          	movff	fsr2l,??_routine+8
  1252  000030  CFDA F050          	movff	fsr2h,??_routine+9
  1253  000034  CFF3 F051          	movff	prodl,??_routine+10
  1254  000038  CFF4 F052          	movff	prodh,??_routine+11
  1255  00003C  CFF6 F053          	movff	tblptrl,??_routine+12
  1256  000040  CFF7 F054          	movff	tblptrh,??_routine+13
  1257  000044  CFF8 F055          	movff	tblptru,??_routine+14
  1258  000048  CFF5 F056          	movff	tablat,??_routine+15
  1259  00004C  C05D  F057         	movff	btemp,??_routine+16
  1260  000050  C05E  F058         	movff	btemp+1,??_routine+17
  1261  000054  C05F  F059         	movff	btemp+2,??_routine+18
  1262  000058  C060  F05A         	movff	btemp+3,??_routine+19
  1263                           
  1264                           ;main.c: 159: RCIE = 0;
  1265  00005C  9A9D               	bcf	3997,5,c	;volatile
  1266                           
  1267                           ;main.c: 160: GIE = 0;
  1268  00005E  9EF2               	bcf	intcon,7,c	;volatile
  1269                           
  1270                           ;main.c: 161: PEIE = 0;
  1271  000060  9CF2               	bcf	intcon,6,c	;volatile
  1272                           
  1273                           ;main.c: 163: if(RCIF){
  1274  000062  AA9E               	btfss	3998,5,c	;volatile
  1275  000064  D065               	goto	i2l136
  1276                           
  1277                           ;main.c: 164: if(RCREG == 'w'){
  1278  000066  0E77               	movlw	119
  1279  000068  18AE               	xorwf	4014,w,c	;volatile
  1280  00006A  A4D8               	btfss	status,2,c
  1281  00006C  D015               	goto	i2l130
  1282                           
  1283                           ;main.c: 165: sendMsg(RCREG);
  1284  00006E  50AE               	movf	4014,w,c	;volatile
  1285  000070  EC6A  F005         	call	_sendMsg
  1286                           
  1287                           ;main.c: 166: Frente();
  1288  000074  EC7E  F005         	call	_Frente	;wreg free
  1289                           
  1290                           ;main.c: 167: Frente_Re();
  1291  000078  EC53  F005         	call	_Frente_Re	;wreg free
  1292                           
  1293                           ;main.c: 168: _delay((unsigned long)((500)*(16000000/4000.0)));
  1294  00007C  0E0B               	movlw	11
  1295  00007E  6E48               	movwf	(??_routine+1)& (0+255),c
  1296  000080  0E26               	movlw	38
  1297  000082  6E47               	movwf	??_routine& (0+255),c
  1298  000084  0E5E               	movlw	94
  1299  000086                     i2u110_47:
  1300  000086  2EE8               	decfsz	wreg,f,c
  1301  000088  D7FE               	bra	i2u110_47
  1302  00008A  2E47               	decfsz	??_routine& (0+255),f,c
  1303  00008C  D7FC               	bra	i2u110_47
  1304  00008E  2E48               	decfsz	(??_routine+1)& (0+255),f,c
  1305  000090  D7FA               	bra	i2u110_47
  1306                           
  1307                           ;main.c: 169: Parado();
  1308  000092  EC78  F005         	call	i2_Parado	;wreg free
  1309                           
  1310                           ;main.c: 170: }
  1311  000096  D04C               	goto	i2l136
  1312  000098                     i2l130:
  1313                           
  1314                           ;main.c: 171: else if(RCREG == 's'){
  1315  000098  0E73               	movlw	115
  1316  00009A  18AE               	xorwf	4014,w,c	;volatile
  1317  00009C  A4D8               	btfss	status,2,c
  1318  00009E  D015               	goto	i2l132
  1319                           
  1320                           ;main.c: 172: sendMsg(RCREG);
  1321  0000A0  50AE               	movf	4014,w,c	;volatile
  1322  0000A2  EC6A  F005         	call	_sendMsg
  1323                           
  1324                           ;main.c: 173: Re();
  1325  0000A6  EC7B  F005         	call	_Re	;wreg free
  1326                           
  1327                           ;main.c: 174: Frente_Re();
  1328  0000AA  EC53  F005         	call	_Frente_Re	;wreg free
  1329                           
  1330                           ;main.c: 175: _delay((unsigned long)((500)*(16000000/4000.0)));
  1331  0000AE  0E0B               	movlw	11
  1332  0000B0  6E48               	movwf	(??_routine+1)& (0+255),c
  1333  0000B2  0E26               	movlw	38
  1334  0000B4  6E47               	movwf	??_routine& (0+255),c
  1335  0000B6  0E5E               	movlw	94
  1336  0000B8                     i2u111_47:
  1337  0000B8  2EE8               	decfsz	wreg,f,c
  1338  0000BA  D7FE               	bra	i2u111_47
  1339  0000BC  2E47               	decfsz	??_routine& (0+255),f,c
  1340  0000BE  D7FC               	bra	i2u111_47
  1341  0000C0  2E48               	decfsz	(??_routine+1)& (0+255),f,c
  1342  0000C2  D7FA               	bra	i2u111_47
  1343                           
  1344                           ;main.c: 176: Parado();
  1345  0000C4  EC78  F005         	call	i2_Parado	;wreg free
  1346                           
  1347                           ;main.c: 177: }
  1348  0000C8  D033               	goto	i2l136
  1349  0000CA                     i2l132:
  1350                           
  1351                           ;main.c: 178: else if(RCREG == 'a'){
  1352  0000CA  0E61               	movlw	97
  1353  0000CC  18AE               	xorwf	4014,w,c	;volatile
  1354  0000CE  A4D8               	btfss	status,2,c
  1355  0000D0  D016               	goto	i2l134
  1356                           
  1357                           ;main.c: 179: sendMsg(RCREG);
  1358  0000D2  50AE               	movf	4014,w,c	;volatile
  1359  0000D4  EC6A  F005         	call	_sendMsg
  1360                           
  1361                           ;main.c: 180: Frente();
  1362  0000D8  EC7E  F005         	call	_Frente	;wreg free
  1363                           
  1364                           ;main.c: 181: curvaDir();
  1365  0000DC  EC46  F005         	call	_curvaDir	;wreg free
  1366                           
  1367                           ;main.c: 182: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1368  0000E0  0E15               	movlw	21
  1369  0000E2  6E48               	movwf	(??_routine+1)& (0+255),c
  1370  0000E4  0E4B               	movlw	75
  1371  0000E6  6E47               	movwf	??_routine& (0+255),c
  1372  0000E8  0EBE               	movlw	190
  1373  0000EA                     i2u112_47:
  1374  0000EA  2EE8               	decfsz	wreg,f,c
  1375  0000EC  D7FE               	bra	i2u112_47
  1376  0000EE  2E47               	decfsz	??_routine& (0+255),f,c
  1377  0000F0  D7FC               	bra	i2u112_47
  1378  0000F2  2E48               	decfsz	(??_routine+1)& (0+255),f,c
  1379  0000F4  D7FA               	bra	i2u112_47
  1380  0000F6  D000               	nop2	
  1381                           
  1382                           ;main.c: 183: Parado();
  1383  0000F8  EC78  F005         	call	i2_Parado	;wreg free
  1384                           
  1385                           ;main.c: 184: }
  1386  0000FC  D019               	goto	i2l136
  1387  0000FE                     i2l134:
  1388                           
  1389                           ;main.c: 185: else if(RCREG == 'd'){
  1390  0000FE  0E64               	movlw	100
  1391  000100  18AE               	xorwf	4014,w,c	;volatile
  1392  000102  A4D8               	btfss	status,2,c
  1393  000104  D015               	goto	i2l136
  1394                           
  1395                           ;main.c: 186: sendMsg(RCREG);
  1396  000106  50AE               	movf	4014,w,c	;volatile
  1397  000108  EC6A  F005         	call	_sendMsg
  1398                           
  1399                           ;main.c: 187: Frente();
  1400  00010C  EC7E  F005         	call	_Frente	;wreg free
  1401                           
  1402                           ;main.c: 188: curvaEsq();
  1403  000110  EC39  F005         	call	_curvaEsq	;wreg free
  1404                           
  1405                           ;main.c: 189: _delay((unsigned long)((1000)*(16000000/4000.0)));
  1406  000114  0E15               	movlw	21
  1407  000116  6E48               	movwf	(??_routine+1)& (0+255),c
  1408  000118  0E4B               	movlw	75
  1409  00011A  6E47               	movwf	??_routine& (0+255),c
  1410  00011C  0EBE               	movlw	190
  1411  00011E                     i2u113_47:
  1412  00011E  2EE8               	decfsz	wreg,f,c
  1413  000120  D7FE               	bra	i2u113_47
  1414  000122  2E47               	decfsz	??_routine& (0+255),f,c
  1415  000124  D7FC               	bra	i2u113_47
  1416  000126  2E48               	decfsz	(??_routine+1)& (0+255),f,c
  1417  000128  D7FA               	bra	i2u113_47
  1418  00012A  D000               	nop2	
  1419                           
  1420                           ;main.c: 190: Parado();
  1421  00012C  EC78  F005         	call	i2_Parado	;wreg free
  1422  000130                     i2l136:
  1423                           
  1424                           ;main.c: 191: }
  1425                           ;main.c: 193: }
  1426                           ;main.c: 195: RCIE = 1;
  1427  000130  8A9D               	bsf	3997,5,c	;volatile
  1428                           
  1429                           ;main.c: 196: GIE = 1;
  1430  000132  8EF2               	bsf	intcon,7,c	;volatile
  1431                           
  1432                           ;main.c: 197: PEIE = 1;
  1433  000134  8CF2               	bsf	intcon,6,c	;volatile
  1434  000136  C05A  F060         	movff	??_routine+19,btemp+3
  1435  00013A  C059  F05F         	movff	??_routine+18,btemp+2
  1436  00013E  C058  F05E         	movff	??_routine+17,btemp+1
  1437  000142  C057  F05D         	movff	??_routine+16,btemp
  1438  000146  C056  FFF5         	movff	??_routine+15,tablat
  1439  00014A  C055  FFF8         	movff	??_routine+14,tblptru
  1440  00014E  C054  FFF7         	movff	??_routine+13,tblptrh
  1441  000152  C053  FFF6         	movff	??_routine+12,tblptrl
  1442  000156  C052  FFF4         	movff	??_routine+11,prodh
  1443  00015A  C051  FFF3         	movff	??_routine+10,prodl
  1444  00015E  C050  FFDA         	movff	??_routine+9,fsr2h
  1445  000162  C04F  FFD9         	movff	??_routine+8,fsr2l
  1446  000166  C04E  FFE2         	movff	??_routine+7,fsr1h
  1447  00016A  C04D  FFE1         	movff	??_routine+6,fsr1l
  1448  00016E  C04C  FFEA         	movff	??_routine+5,fsr0h
  1449  000172  C04B  FFE9         	movff	??_routine+4,fsr0l
  1450  000176  C04A  FFFB         	movff	??_routine+3,pclatu
  1451  00017A  C049  FFFA         	movff	??_routine+2,pclath
  1452  00017E  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1453  000180  0011               	retfie		f
  1454  000182                     __end_of_routine:
  1455                           	opt stack 0
  1456                           pclatu	equ	0xFFB
  1457                           pclath	equ	0xFFA
  1458                           tblptru	equ	0xFF8
  1459                           tblptrh	equ	0xFF7
  1460                           tblptrl	equ	0xFF6
  1461                           tablat	equ	0xFF5
  1462                           prodh	equ	0xFF4
  1463                           prodl	equ	0xFF3
  1464                           intcon	equ	0xFF2
  1465                           fsr0h	equ	0xFEA
  1466                           fsr0l	equ	0xFE9
  1467                           wreg	equ	0xFE8
  1468                           fsr1h	equ	0xFE2
  1469                           fsr1l	equ	0xFE1
  1470                           fsr2h	equ	0xFDA
  1471                           fsr2l	equ	0xFD9
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function i2_Parado *****************
  1475 ;; Defined at:
  1476 ;;		line 116 in file "main.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		None
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1490 ;;      Params:         0       0       0       0       0       0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1493 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_routine
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text8
  1504  000AF0                     __ptext8:
  1505                           	opt stack 0
  1506  000AF0                     i2_Parado:
  1507                           	opt stack 27
  1508                           
  1509                           ;main.c: 118: PORTDbits.RD0 = 0;
  1510                           
  1511                           ;incstack = 0
  1512  000AF0  9083               	bcf	3971,0,c	;volatile
  1513                           
  1514                           ;main.c: 119: PORTDbits.RD1 = 0;
  1515  000AF2  9283               	bcf	3971,1,c	;volatile
  1516  000AF4  0012               	return		;funcret
  1517  000AF6                     __end_ofi2_Parado:
  1518                           	opt stack 0
  1519                           pclatu	equ	0xFFB
  1520                           pclath	equ	0xFFA
  1521                           tblptru	equ	0xFF8
  1522                           tblptrh	equ	0xFF7
  1523                           tblptrl	equ	0xFF6
  1524                           tablat	equ	0xFF5
  1525                           prodh	equ	0xFF4
  1526                           prodl	equ	0xFF3
  1527                           intcon	equ	0xFF2
  1528                           fsr0h	equ	0xFEA
  1529                           fsr0l	equ	0xFE9
  1530                           wreg	equ	0xFE8
  1531                           fsr1h	equ	0xFE2
  1532                           fsr1l	equ	0xFE1
  1533                           fsr2h	equ	0xFDA
  1534                           fsr2l	equ	0xFD9
  1535                           status	equ	0xFD8
  1536                           
  1537 ;; *************** function _sendMsg *****************
  1538 ;; Defined at:
  1539 ;;		line 151 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  msg             1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  msg             1    0[COMRAM] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1553 ;;      Params:         0       0       0       0       0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1556 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1557 ;;Total ram usage:        1 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; This function calls:
  1560 ;;		Nothing
  1561 ;; This function is called by:
  1562 ;;		_routine
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text9
  1567  000AD4                     __ptext9:
  1568                           	opt stack 0
  1569  000AD4                     _sendMsg:
  1570                           	opt stack 27
  1571                           
  1572                           ;incstack = 0
  1573                           ;sendMsg@msg stored from wreg
  1574  000AD4  6E01               	movwf	sendMsg@msg,c
  1575  000AD6                     
  1576                           ;main.c: 153: while(!TRMT);
  1577  000AD6  A2AC               	btfss	4012,1,c	;volatile
  1578  000AD8  D7FE               	goto	i2l1135
  1579                           
  1580                           ;main.c: 154: TXREG = msg;
  1581  000ADA  C001  FFAD         	movff	sendMsg@msg,4013	;volatile
  1582  000ADE  0012               	return		;funcret
  1583  000AE0                     __end_of_sendMsg:
  1584                           	opt stack 0
  1585                           pclatu	equ	0xFFB
  1586                           pclath	equ	0xFFA
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           prodh	equ	0xFF4
  1592                           prodl	equ	0xFF3
  1593                           intcon	equ	0xFF2
  1594                           fsr0h	equ	0xFEA
  1595                           fsr0l	equ	0xFE9
  1596                           wreg	equ	0xFE8
  1597                           fsr1h	equ	0xFE2
  1598                           fsr1l	equ	0xFE1
  1599                           fsr2h	equ	0xFDA
  1600                           fsr2l	equ	0xFD9
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function _curvaEsq *****************
  1604 ;; Defined at:
  1605 ;;		line 92 in file "main.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1619 ;;      Params:         0       0       0       0       0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    3
  1626 ;; This function calls:
  1627 ;;		_PWM1_duty
  1628 ;;		_PWM2_duty
  1629 ;; This function is called by:
  1630 ;;		_routine
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text10
  1635  000A72                     __ptext10:
  1636                           	opt stack 0
  1637  000A72                     _curvaEsq:
  1638                           	opt stack 24
  1639                           
  1640                           ;main.c: 93: PWM1_duty(75);
  1641                           
  1642                           ;incstack = 0
  1643  000A72  0E00               	movlw	0
  1644  000A74  6E44               	movwf	PWM1_duty@duty+1,c
  1645  000A76  0E4B               	movlw	75
  1646  000A78  6E43               	movwf	PWM1_duty@duty,c
  1647  000A7A  EC3D  F001         	call	_PWM1_duty	;wreg free
  1648                           
  1649                           ;main.c: 94: PWM2_duty(50);
  1650  000A7E  0E00               	movlw	0
  1651  000A80  6E44               	movwf	PWM2_duty@duty+1,c
  1652  000A82  0E32               	movlw	50
  1653  000A84  6E43               	movwf	PWM2_duty@duty,c
  1654  000A86  ECC1  F000         	call	_PWM2_duty	;wreg free
  1655  000A8A  0012               	return		;funcret
  1656  000A8C                     __end_of_curvaEsq:
  1657                           	opt stack 0
  1658                           pclatu	equ	0xFFB
  1659                           pclath	equ	0xFFA
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           prodh	equ	0xFF4
  1665                           prodl	equ	0xFF3
  1666                           intcon	equ	0xFF2
  1667                           fsr0h	equ	0xFEA
  1668                           fsr0l	equ	0xFE9
  1669                           wreg	equ	0xFE8
  1670                           fsr1h	equ	0xFE2
  1671                           fsr1l	equ	0xFE1
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           status	equ	0xFD8
  1675                           
  1676 ;; *************** function _curvaDir *****************
  1677 ;; Defined at:
  1678 ;;		line 86 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        0 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    3
  1699 ;; This function calls:
  1700 ;;		_PWM1_duty
  1701 ;;		_PWM2_duty
  1702 ;; This function is called by:
  1703 ;;		_routine
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text11
  1708  000A8C                     __ptext11:
  1709                           	opt stack 0
  1710  000A8C                     _curvaDir:
  1711                           	opt stack 24
  1712                           
  1713                           ;main.c: 87: PWM1_duty(50);
  1714                           
  1715                           ;incstack = 0
  1716  000A8C  0E00               	movlw	0
  1717  000A8E  6E44               	movwf	PWM1_duty@duty+1,c
  1718  000A90  0E32               	movlw	50
  1719  000A92  6E43               	movwf	PWM1_duty@duty,c
  1720  000A94  EC3D  F001         	call	_PWM1_duty	;wreg free
  1721                           
  1722                           ;main.c: 88: PWM2_duty(75);
  1723  000A98  0E00               	movlw	0
  1724  000A9A  6E44               	movwf	PWM2_duty@duty+1,c
  1725  000A9C  0E4B               	movlw	75
  1726  000A9E  6E43               	movwf	PWM2_duty@duty,c
  1727  000AA0  ECC1  F000         	call	_PWM2_duty	;wreg free
  1728  000AA4  0012               	return		;funcret
  1729  000AA6                     __end_of_curvaDir:
  1730                           	opt stack 0
  1731                           pclatu	equ	0xFFB
  1732                           pclath	equ	0xFFA
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           prodh	equ	0xFF4
  1738                           prodl	equ	0xFF3
  1739                           intcon	equ	0xFF2
  1740                           fsr0h	equ	0xFEA
  1741                           fsr0l	equ	0xFE9
  1742                           wreg	equ	0xFE8
  1743                           fsr1h	equ	0xFE2
  1744                           fsr1l	equ	0xFE1
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function _Re *****************
  1750 ;; Defined at:
  1751 ;;		line 109 in file "main.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;		None
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;		None
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		None
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1765 ;;      Params:         0       0       0       0       0       0       0       0       0
  1766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1768 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1769 ;;Total ram usage:        0 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_routine
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text12
  1779  000AF6                     __ptext12:
  1780                           	opt stack 0
  1781  000AF6                     _Re:
  1782                           	opt stack 27
  1783                           
  1784                           ;main.c: 111: PORTDbits.RD0 = 1;
  1785                           
  1786                           ;incstack = 0
  1787  000AF6  8083               	bsf	3971,0,c	;volatile
  1788                           
  1789                           ;main.c: 112: PORTDbits.RD1 = 0;
  1790  000AF8  9283               	bcf	3971,1,c	;volatile
  1791  000AFA  0012               	return		;funcret
  1792  000AFC                     __end_of_Re:
  1793                           	opt stack 0
  1794                           pclatu	equ	0xFFB
  1795                           pclath	equ	0xFFA
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           prodh	equ	0xFF4
  1801                           prodl	equ	0xFF3
  1802                           intcon	equ	0xFF2
  1803                           fsr0h	equ	0xFEA
  1804                           fsr0l	equ	0xFE9
  1805                           wreg	equ	0xFE8
  1806                           fsr1h	equ	0xFE2
  1807                           fsr1l	equ	0xFE1
  1808                           fsr2h	equ	0xFDA
  1809                           fsr2l	equ	0xFD9
  1810                           status	equ	0xFD8
  1811                           
  1812 ;; *************** function _Frente_Re *****************
  1813 ;; Defined at:
  1814 ;;		line 97 in file "main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1831 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    3
  1835 ;; This function calls:
  1836 ;;		_PWM1_duty
  1837 ;;		_PWM2_duty
  1838 ;; This function is called by:
  1839 ;;		_routine
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text13
  1844  000AA6                     __ptext13:
  1845                           	opt stack 0
  1846  000AA6                     _Frente_Re:
  1847                           	opt stack 24
  1848                           
  1849                           ;main.c: 98: PWM1_duty(75);
  1850                           
  1851                           ;incstack = 0
  1852  000AA6  0E00               	movlw	0
  1853  000AA8  6E44               	movwf	PWM1_duty@duty+1,c
  1854  000AAA  0E4B               	movlw	75
  1855  000AAC  6E43               	movwf	PWM1_duty@duty,c
  1856  000AAE  EC3D  F001         	call	_PWM1_duty	;wreg free
  1857                           
  1858                           ;main.c: 99: PWM2_duty(75);
  1859  000AB2  0E00               	movlw	0
  1860  000AB4  6E44               	movwf	PWM2_duty@duty+1,c
  1861  000AB6  0E4B               	movlw	75
  1862  000AB8  6E43               	movwf	PWM2_duty@duty,c
  1863  000ABA  ECC1  F000         	call	_PWM2_duty	;wreg free
  1864  000ABE  0012               	return		;funcret
  1865  000AC0                     __end_of_Frente_Re:
  1866                           	opt stack 0
  1867                           pclatu	equ	0xFFB
  1868                           pclath	equ	0xFFA
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           prodh	equ	0xFF4
  1874                           prodl	equ	0xFF3
  1875                           intcon	equ	0xFF2
  1876                           fsr0h	equ	0xFEA
  1877                           fsr0l	equ	0xFE9
  1878                           wreg	equ	0xFE8
  1879                           fsr1h	equ	0xFE2
  1880                           fsr1l	equ	0xFE1
  1881                           fsr2h	equ	0xFDA
  1882                           fsr2l	equ	0xFD9
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _PWM2_duty *****************
  1886 ;; Defined at:
  1887 ;;		line 45 in file "main.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  duty            2   66[COMRAM] unsigned int 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1901 ;;      Params:         2       0       0       0       0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1903 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1904 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1905 ;;Total ram usage:        4 bytes
  1906 ;; Hardware stack levels used:    1
  1907 ;; Hardware stack levels required when called:    2
  1908 ;; This function calls:
  1909 ;;		_PWM_Max_Duty
  1910 ;;		___ftdiv
  1911 ;;		___ftmul
  1912 ;;		___fttol
  1913 ;;		___lwtoft
  1914 ;; This function is called by:
  1915 ;;		_curvaDir
  1916 ;;		_curvaEsq
  1917 ;;		_Frente_Re
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text14
  1922  000182                     __ptext14:
  1923                           	opt stack 0
  1924  000182                     _PWM2_duty:
  1925                           	opt stack 24
  1926                           
  1927                           ;main.c: 46: duty = ((double)duty/100)*1022;
  1928                           
  1929                           ;incstack = 0
  1930  000182  0E80               	movlw	128
  1931  000184  6E28               	movwf	___ftmul@f2,c
  1932  000186  0E7F               	movlw	127
  1933  000188  6E29               	movwf	___ftmul@f2+1,c
  1934  00018A  0E44               	movlw	68
  1935  00018C  6E2A               	movwf	___ftmul@f2+2,c
  1936  00018E  0E00               	movlw	0
  1937  000190  6E19               	movwf	___ftdiv@f2,c
  1938  000192  0EC8               	movlw	200
  1939  000194  6E1A               	movwf	___ftdiv@f2+1,c
  1940  000196  0E42               	movlw	66
  1941  000198  6E1B               	movwf	___ftdiv@f2+2,c
  1942  00019A  C043  F013         	movff	PWM2_duty@duty,___lwtoft@c
  1943  00019E  C044  F014         	movff	PWM2_duty@duty+1,___lwtoft@c+1
  1944  0001A2  EC27  F005         	call	___lwtoft	;wreg free
  1945  0001A6  C013  F016         	movff	?___lwtoft,___ftdiv@f1
  1946  0001AA  C014  F017         	movff	?___lwtoft+1,___ftdiv@f1+1
  1947  0001AE  C015  F018         	movff	?___lwtoft+2,___ftdiv@f1+2
  1948  0001B2  ECAD  F002         	call	___ftdiv	;wreg free
  1949  0001B6  C016  F025         	movff	?___ftdiv,___ftmul@f1
  1950  0001BA  C017  F026         	movff	?___ftdiv+1,___ftmul@f1+1
  1951  0001BE  C018  F027         	movff	?___ftdiv+2,___ftmul@f1+2
  1952  0001C2  EC33  F002         	call	___ftmul	;wreg free
  1953  0001C6  C025  F034         	movff	?___ftmul,___fttol@f1
  1954  0001CA  C026  F035         	movff	?___ftmul+1,___fttol@f1+1
  1955  0001CE  C027  F036         	movff	?___ftmul+2,___fttol@f1+2
  1956  0001D2  ECB9  F001         	call	___fttol	;wreg free
  1957  0001D6  C034  F043         	movff	?___fttol,PWM2_duty@duty
  1958  0001DA  C035  F044         	movff	?___fttol+1,PWM2_duty@duty+1
  1959                           
  1960                           ;main.c: 47: if(duty<=1022){
  1961  0001DE  2843               	incf	PWM2_duty@duty,w,c
  1962  0001E0  0E03               	movlw	3
  1963  0001E2  5844               	subwfb	PWM2_duty@duty+1,w,c
  1964  0001E4  B0D8               	btfsc	status,0,c
  1965  0001E6  0012               	return	
  1966                           
  1967                           ;main.c: 48: duty = ((double)duty/1023)*PWM_Max_Duty();
  1968  0001E8  ECE6  F004         	call	_PWM_Max_Duty	;wreg free
  1969  0001EC  C00F  F013         	movff	?_PWM_Max_Duty,___lwtoft@c
  1970  0001F0  C010  F014         	movff	?_PWM_Max_Duty+1,___lwtoft@c+1
  1971  0001F4  EC27  F005         	call	___lwtoft	;wreg free
  1972  0001F8  C013  F028         	movff	?___lwtoft,___ftmul@f2
  1973  0001FC  C014  F029         	movff	?___lwtoft+1,___ftmul@f2+1
  1974  000200  C015  F02A         	movff	?___lwtoft+2,___ftmul@f2+2
  1975  000204  0EC0               	movlw	192
  1976  000206  6E19               	movwf	___ftdiv@f2,c
  1977  000208  0E7F               	movlw	127
  1978  00020A  6E1A               	movwf	___ftdiv@f2+1,c
  1979  00020C  0E44               	movlw	68
  1980  00020E  6E1B               	movwf	___ftdiv@f2+2,c
  1981  000210  C043  F013         	movff	PWM2_duty@duty,___lwtoft@c
  1982  000214  C044  F014         	movff	PWM2_duty@duty+1,___lwtoft@c+1
  1983  000218  EC27  F005         	call	___lwtoft	;wreg free
  1984  00021C  C013  F016         	movff	?___lwtoft,___ftdiv@f1
  1985  000220  C014  F017         	movff	?___lwtoft+1,___ftdiv@f1+1
  1986  000224  C015  F018         	movff	?___lwtoft+2,___ftdiv@f1+2
  1987  000228  ECAD  F002         	call	___ftdiv	;wreg free
  1988  00022C  C016  F025         	movff	?___ftdiv,___ftmul@f1
  1989  000230  C017  F026         	movff	?___ftdiv+1,___ftmul@f1+1
  1990  000234  C018  F027         	movff	?___ftdiv+2,___ftmul@f1+2
  1991  000238  EC33  F002         	call	___ftmul	;wreg free
  1992  00023C  C025  F034         	movff	?___ftmul,___fttol@f1
  1993  000240  C026  F035         	movff	?___ftmul+1,___fttol@f1+1
  1994  000244  C027  F036         	movff	?___ftmul+2,___fttol@f1+2
  1995  000248  ECB9  F001         	call	___fttol	;wreg free
  1996  00024C  C034  F043         	movff	?___fttol,PWM2_duty@duty
  1997  000250  C035  F044         	movff	?___fttol+1,PWM2_duty@duty+1
  1998                           
  1999                           ;main.c: 49: DC2B1 = duty & 2;
  2000  000254  9ABA               	bcf	4026,5,c	;volatile
  2001                           
  2002                           ;main.c: 50: DC2B0 = duty & 1;
  2003  000256  A043               	btfss	PWM2_duty@duty,0,c
  2004  000258  D002               	goto	i2u93_40
  2005  00025A  88BA               	bsf	4026,4,c	;volatile
  2006  00025C  D001               	goto	i2u94_45
  2007  00025E                     i2u93_40:
  2008  00025E  98BA               	bcf	4026,4,c	;volatile
  2009  000260                     i2u94_45:
  2010                           
  2011                           ;main.c: 51: CCPR2L = duty>>2;
  2012  000260  C043  F045         	movff	PWM2_duty@duty,??_PWM2_duty
  2013  000264  C044  F046         	movff	PWM2_duty@duty+1,??_PWM2_duty+1
  2014  000268  90D8               	bcf	status,0,c
  2015  00026A  3246               	rrcf	??_PWM2_duty+1,f,c
  2016  00026C  3245               	rrcf	??_PWM2_duty,f,c
  2017  00026E  90D8               	bcf	status,0,c
  2018  000270  3246               	rrcf	??_PWM2_duty+1,f,c
  2019  000272  3245               	rrcf	??_PWM2_duty,f,c
  2020  000274  5045               	movf	??_PWM2_duty,w,c
  2021  000276  6EBB               	movwf	4027,c	;volatile
  2022  000278  0012               	return	
  2023  00027A                     __end_of_PWM2_duty:
  2024                           	opt stack 0
  2025                           pclatu	equ	0xFFB
  2026                           pclath	equ	0xFFA
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           prodh	equ	0xFF4
  2032                           prodl	equ	0xFF3
  2033                           intcon	equ	0xFF2
  2034                           fsr0h	equ	0xFEA
  2035                           fsr0l	equ	0xFE9
  2036                           wreg	equ	0xFE8
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           fsr2h	equ	0xFDA
  2040                           fsr2l	equ	0xFD9
  2041                           status	equ	0xFD8
  2042                           
  2043 ;; *************** function _PWM1_duty *****************
  2044 ;; Defined at:
  2045 ;;		line 35 in file "main.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  duty            2   66[COMRAM] unsigned int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2059 ;;      Params:         2       0       0       0       0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2061 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2062 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2063 ;;Total ram usage:        4 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    2
  2066 ;; This function calls:
  2067 ;;		_PWM_Max_Duty
  2068 ;;		___ftdiv
  2069 ;;		___ftmul
  2070 ;;		___fttol
  2071 ;;		___lwtoft
  2072 ;; This function is called by:
  2073 ;;		_curvaDir
  2074 ;;		_curvaEsq
  2075 ;;		_Frente_Re
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text15
  2080  00027A                     __ptext15:
  2081                           	opt stack 0
  2082  00027A                     _PWM1_duty:
  2083                           	opt stack 24
  2084                           
  2085                           ;main.c: 36: duty = ((double)duty/100)*1022;
  2086                           
  2087                           ;incstack = 0
  2088  00027A  0E80               	movlw	128
  2089  00027C  6E28               	movwf	___ftmul@f2,c
  2090  00027E  0E7F               	movlw	127
  2091  000280  6E29               	movwf	___ftmul@f2+1,c
  2092  000282  0E44               	movlw	68
  2093  000284  6E2A               	movwf	___ftmul@f2+2,c
  2094  000286  0E00               	movlw	0
  2095  000288  6E19               	movwf	___ftdiv@f2,c
  2096  00028A  0EC8               	movlw	200
  2097  00028C  6E1A               	movwf	___ftdiv@f2+1,c
  2098  00028E  0E42               	movlw	66
  2099  000290  6E1B               	movwf	___ftdiv@f2+2,c
  2100  000292  C043  F013         	movff	PWM1_duty@duty,___lwtoft@c
  2101  000296  C044  F014         	movff	PWM1_duty@duty+1,___lwtoft@c+1
  2102  00029A  EC27  F005         	call	___lwtoft	;wreg free
  2103  00029E  C013  F016         	movff	?___lwtoft,___ftdiv@f1
  2104  0002A2  C014  F017         	movff	?___lwtoft+1,___ftdiv@f1+1
  2105  0002A6  C015  F018         	movff	?___lwtoft+2,___ftdiv@f1+2
  2106  0002AA  ECAD  F002         	call	___ftdiv	;wreg free
  2107  0002AE  C016  F025         	movff	?___ftdiv,___ftmul@f1
  2108  0002B2  C017  F026         	movff	?___ftdiv+1,___ftmul@f1+1
  2109  0002B6  C018  F027         	movff	?___ftdiv+2,___ftmul@f1+2
  2110  0002BA  EC33  F002         	call	___ftmul	;wreg free
  2111  0002BE  C025  F034         	movff	?___ftmul,___fttol@f1
  2112  0002C2  C026  F035         	movff	?___ftmul+1,___fttol@f1+1
  2113  0002C6  C027  F036         	movff	?___ftmul+2,___fttol@f1+2
  2114  0002CA  ECB9  F001         	call	___fttol	;wreg free
  2115  0002CE  C034  F043         	movff	?___fttol,PWM1_duty@duty
  2116  0002D2  C035  F044         	movff	?___fttol+1,PWM1_duty@duty+1
  2117                           
  2118                           ;main.c: 37: if(duty<=1022){
  2119  0002D6  2843               	incf	PWM1_duty@duty,w,c
  2120  0002D8  0E03               	movlw	3
  2121  0002DA  5844               	subwfb	PWM1_duty@duty+1,w,c
  2122  0002DC  B0D8               	btfsc	status,0,c
  2123  0002DE  0012               	return	
  2124                           
  2125                           ;main.c: 38: duty = ((double)duty/1023)*PWM_Max_Duty();
  2126  0002E0  ECE6  F004         	call	_PWM_Max_Duty	;wreg free
  2127  0002E4  C00F  F013         	movff	?_PWM_Max_Duty,___lwtoft@c
  2128  0002E8  C010  F014         	movff	?_PWM_Max_Duty+1,___lwtoft@c+1
  2129  0002EC  EC27  F005         	call	___lwtoft	;wreg free
  2130  0002F0  C013  F028         	movff	?___lwtoft,___ftmul@f2
  2131  0002F4  C014  F029         	movff	?___lwtoft+1,___ftmul@f2+1
  2132  0002F8  C015  F02A         	movff	?___lwtoft+2,___ftmul@f2+2
  2133  0002FC  0EC0               	movlw	192
  2134  0002FE  6E19               	movwf	___ftdiv@f2,c
  2135  000300  0E7F               	movlw	127
  2136  000302  6E1A               	movwf	___ftdiv@f2+1,c
  2137  000304  0E44               	movlw	68
  2138  000306  6E1B               	movwf	___ftdiv@f2+2,c
  2139  000308  C043  F013         	movff	PWM1_duty@duty,___lwtoft@c
  2140  00030C  C044  F014         	movff	PWM1_duty@duty+1,___lwtoft@c+1
  2141  000310  EC27  F005         	call	___lwtoft	;wreg free
  2142  000314  C013  F016         	movff	?___lwtoft,___ftdiv@f1
  2143  000318  C014  F017         	movff	?___lwtoft+1,___ftdiv@f1+1
  2144  00031C  C015  F018         	movff	?___lwtoft+2,___ftdiv@f1+2
  2145  000320  ECAD  F002         	call	___ftdiv	;wreg free
  2146  000324  C016  F025         	movff	?___ftdiv,___ftmul@f1
  2147  000328  C017  F026         	movff	?___ftdiv+1,___ftmul@f1+1
  2148  00032C  C018  F027         	movff	?___ftdiv+2,___ftmul@f1+2
  2149  000330  EC33  F002         	call	___ftmul	;wreg free
  2150  000334  C025  F034         	movff	?___ftmul,___fttol@f1
  2151  000338  C026  F035         	movff	?___ftmul+1,___fttol@f1+1
  2152  00033C  C027  F036         	movff	?___ftmul+2,___fttol@f1+2
  2153  000340  ECB9  F001         	call	___fttol	;wreg free
  2154  000344  C034  F043         	movff	?___fttol,PWM1_duty@duty
  2155  000348  C035  F044         	movff	?___fttol+1,PWM1_duty@duty+1
  2156                           
  2157                           ;main.c: 39: DC1B1 = duty & 2;
  2158  00034C  9ABD               	bcf	4029,5,c	;volatile
  2159                           
  2160                           ;main.c: 40: DC1B0 = duty & 1;
  2161  00034E  A043               	btfss	PWM1_duty@duty,0,c
  2162  000350  D002               	goto	i2u90_40
  2163  000352  88BD               	bsf	4029,4,c	;volatile
  2164  000354  D001               	goto	i2u91_45
  2165  000356                     i2u90_40:
  2166  000356  98BD               	bcf	4029,4,c	;volatile
  2167  000358                     i2u91_45:
  2168                           
  2169                           ;main.c: 41: CCPR1L = duty>>2;
  2170  000358  C043  F045         	movff	PWM1_duty@duty,??_PWM1_duty
  2171  00035C  C044  F046         	movff	PWM1_duty@duty+1,??_PWM1_duty+1
  2172  000360  90D8               	bcf	status,0,c
  2173  000362  3246               	rrcf	??_PWM1_duty+1,f,c
  2174  000364  3245               	rrcf	??_PWM1_duty,f,c
  2175  000366  90D8               	bcf	status,0,c
  2176  000368  3246               	rrcf	??_PWM1_duty+1,f,c
  2177  00036A  3245               	rrcf	??_PWM1_duty,f,c
  2178  00036C  5045               	movf	??_PWM1_duty,w,c
  2179  00036E  6EBE               	movwf	4030,c	;volatile
  2180  000370  0012               	return	
  2181  000372                     __end_of_PWM1_duty:
  2182                           	opt stack 0
  2183                           pclatu	equ	0xFFB
  2184                           pclath	equ	0xFFA
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           prodh	equ	0xFF4
  2190                           prodl	equ	0xFF3
  2191                           intcon	equ	0xFF2
  2192                           fsr0h	equ	0xFEA
  2193                           fsr0l	equ	0xFE9
  2194                           wreg	equ	0xFE8
  2195                           fsr1h	equ	0xFE2
  2196                           fsr1l	equ	0xFE1
  2197                           fsr2h	equ	0xFDA
  2198                           fsr2l	equ	0xFD9
  2199                           status	equ	0xFD8
  2200                           
  2201 ;; *************** function ___lwtoft *****************
  2202 ;; Defined at:
  2203 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  c               2   18[COMRAM] unsigned int 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  3   18[COMRAM] float 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2217 ;;      Params:         3       0       0       0       0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2220 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    1
  2224 ;; This function calls:
  2225 ;;		___ftpack
  2226 ;; This function is called by:
  2227 ;;		_PWM1_duty
  2228 ;;		_PWM2_duty
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text16
  2233  000A4E                     __ptext16:
  2234                           	opt stack 0
  2235  000A4E                     ___lwtoft:
  2236                           	opt stack 24
  2237                           
  2238                           ;incstack = 0
  2239  000A4E  C013  F001         	movff	___lwtoft@c,___ftpack@arg
  2240  000A52  C014  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2241  000A56  6A03               	clrf	___ftpack@arg+2,c
  2242  000A58  0E8E               	movlw	142
  2243  000A5A  6E04               	movwf	___ftpack@exp,c
  2244  000A5C  0E00               	movlw	0
  2245  000A5E  6E05               	movwf	___ftpack@sign,c
  2246  000A60  ECED  F003         	call	___ftpack	;wreg free
  2247  000A64  C001  F013         	movff	?___ftpack,?___lwtoft
  2248  000A68  C002  F014         	movff	?___ftpack+1,?___lwtoft+1
  2249  000A6C  C003  F015         	movff	?___ftpack+2,?___lwtoft+2
  2250  000A70  0012               	return	
  2251  000A72                     __end_of___lwtoft:
  2252                           	opt stack 0
  2253                           pclatu	equ	0xFFB
  2254                           pclath	equ	0xFFA
  2255                           tblptru	equ	0xFF8
  2256                           tblptrh	equ	0xFF7
  2257                           tblptrl	equ	0xFF6
  2258                           tablat	equ	0xFF5
  2259                           prodh	equ	0xFF4
  2260                           prodl	equ	0xFF3
  2261                           intcon	equ	0xFF2
  2262                           fsr0h	equ	0xFEA
  2263                           fsr0l	equ	0xFE9
  2264                           wreg	equ	0xFE8
  2265                           fsr1h	equ	0xFE2
  2266                           fsr1l	equ	0xFE1
  2267                           fsr2h	equ	0xFDA
  2268                           fsr2l	equ	0xFD9
  2269                           status	equ	0xFD8
  2270                           
  2271 ;; *************** function ___fttol *****************
  2272 ;; Defined at:
  2273 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  f1              3   51[COMRAM] float 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;  lval            4   61[COMRAM] unsigned long 
  2278 ;;  exp1            1   65[COMRAM] unsigned char 
  2279 ;;  sign1           1   60[COMRAM] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  4   51[COMRAM] long 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2289 ;;      Params:         4       0       0       0       0       0       0       0       0
  2290 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2291 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2292 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2293 ;;Total ram usage:       15 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_PWM1_duty
  2299 ;;		_PWM2_duty
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text17
  2304  000372                     __ptext17:
  2305                           	opt stack 0
  2306  000372                     ___fttol:
  2307                           	opt stack 25
  2308                           
  2309                           ;incstack = 0
  2310  000372  C036  F038         	movff	___fttol@f1+2,??___fttol
  2311  000376  6A39               	clrf	(??___fttol+1)& (0+255),c
  2312  000378  6A3A               	clrf	(??___fttol+2)& (0+255),c
  2313  00037A  3435               	rlcf	___fttol@f1+1,w,c
  2314  00037C  3638               	rlcf	??___fttol& (0+255),f,c
  2315  00037E  E301               	bnc	u81_41
  2316  000380  8039               	bsf	(??___fttol+1)& (0+255),0,c
  2317  000382                     u81_41:
  2318  000382  5038               	movf	??___fttol,w,c
  2319  000384  6E42               	movwf	___fttol@exp1,c
  2320  000386  5042               	movf	___fttol@exp1,w,c
  2321  000388  A4D8               	btfss	status,2,c
  2322  00038A  D009               	goto	i2l460
  2323  00038C  0E00               	movlw	0
  2324  00038E  6E34               	movwf	?___fttol,c
  2325  000390  0E00               	movlw	0
  2326  000392  6E35               	movwf	?___fttol+1,c
  2327  000394  0E00               	movlw	0
  2328  000396  6E36               	movwf	?___fttol+2,c
  2329  000398  0E00               	movlw	0
  2330  00039A  6E37               	movwf	?___fttol+3,c
  2331  00039C  0012               	return	
  2332  00039E                     i2l460:
  2333  00039E  0E17               	movlw	23
  2334  0003A0  6E38               	movwf	??___fttol& (0+255),c
  2335  0003A2  C034  F039         	movff	___fttol@f1,??___fttol+1
  2336  0003A6  C035  F03A         	movff	___fttol@f1+1,??___fttol+2
  2337  0003AA  C036  F03B         	movff	___fttol@f1+2,??___fttol+3
  2338  0003AE  2838               	incf	??___fttol,w,c
  2339  0003B0  6E3C               	movwf	(??___fttol+4)& (0+255),c
  2340  0003B2  D004               	goto	i2u83_40
  2341  0003B4                     i2u83_45:
  2342  0003B4  90D8               	bcf	status,0,c
  2343  0003B6  323B               	rrcf	??___fttol+3,f,c
  2344  0003B8  323A               	rrcf	??___fttol+2,f,c
  2345  0003BA  3239               	rrcf	??___fttol+1,f,c
  2346  0003BC                     i2u83_40:
  2347  0003BC  2E3C               	decfsz	(??___fttol+4)& (0+255),f,c
  2348  0003BE  D7FA               	goto	i2u83_45
  2349  0003C0  5039               	movf	??___fttol+1,w,c
  2350  0003C2  6E3D               	movwf	___fttol@sign1,c
  2351  0003C4  8E35               	bsf	___fttol@f1+1,7,c
  2352  0003C6  0EFF               	movlw	255
  2353  0003C8  1634               	andwf	___fttol@f1,f,c
  2354  0003CA  0EFF               	movlw	255
  2355  0003CC  1635               	andwf	___fttol@f1+1,f,c
  2356  0003CE  0E00               	movlw	0
  2357  0003D0  1636               	andwf	___fttol@f1+2,f,c
  2358  0003D2  5034               	movf	___fttol@f1,w,c
  2359  0003D4  6E3E               	movwf	___fttol@lval,c
  2360  0003D6  5035               	movf	___fttol@f1+1,w,c
  2361  0003D8  6E3F               	movwf	___fttol@lval+1,c
  2362  0003DA  5036               	movf	___fttol@f1+2,w,c
  2363  0003DC  6E40               	movwf	___fttol@lval+2,c
  2364  0003DE  6A41               	clrf	___fttol@lval+3,c
  2365  0003E0  0E8E               	movlw	142
  2366  0003E2  5E42               	subwf	___fttol@exp1,f,c
  2367  0003E4  AE42               	btfss	___fttol@exp1,7,c
  2368  0003E6  D016               	goto	i2l462
  2369  0003E8  5042               	movf	___fttol@exp1,w,c
  2370  0003EA  0A80               	xorlw	128
  2371  0003EC  0F8F               	addlw	143
  2372  0003EE  B0D8               	btfsc	status,0,c
  2373  0003F0  D009               	goto	i2l463
  2374  0003F2  0E00               	movlw	0
  2375  0003F4  6E34               	movwf	?___fttol,c
  2376  0003F6  0E00               	movlw	0
  2377  0003F8  6E35               	movwf	?___fttol+1,c
  2378  0003FA  0E00               	movlw	0
  2379  0003FC  6E36               	movwf	?___fttol+2,c
  2380  0003FE  0E00               	movlw	0
  2381  000400  6E37               	movwf	?___fttol+3,c
  2382  000402  0012               	return	
  2383  000404                     i2l463:
  2384  000404  90D8               	bcf	status,0,c
  2385  000406  3241               	rrcf	___fttol@lval+3,f,c
  2386  000408  3240               	rrcf	___fttol@lval+2,f,c
  2387  00040A  323F               	rrcf	___fttol@lval+1,f,c
  2388  00040C  323E               	rrcf	___fttol@lval,f,c
  2389  00040E  3E42               	incfsz	___fttol@exp1,f,c
  2390  000410  D7F9               	goto	i2l463
  2391  000412  D015               	goto	i2u87_40
  2392  000414                     i2l462:
  2393  000414  0E17               	movlw	23
  2394  000416  6442               	cpfsgt	___fttol@exp1,c
  2395  000418  D00F               	goto	i2l468
  2396  00041A  0E00               	movlw	0
  2397  00041C  6E34               	movwf	?___fttol,c
  2398  00041E  0E00               	movlw	0
  2399  000420  6E35               	movwf	?___fttol+1,c
  2400  000422  0E00               	movlw	0
  2401  000424  6E36               	movwf	?___fttol+2,c
  2402  000426  0E00               	movlw	0
  2403  000428  6E37               	movwf	?___fttol+3,c
  2404  00042A  0012               	return	
  2405  00042C  90D8               	bcf	status,0,c
  2406  00042E  363E               	rlcf	___fttol@lval,f,c
  2407  000430  363F               	rlcf	___fttol@lval+1,f,c
  2408  000432  3640               	rlcf	___fttol@lval+2,f,c
  2409  000434  3641               	rlcf	___fttol@lval+3,f,c
  2410  000436  0642               	decf	___fttol@exp1,f,c
  2411  000438                     i2l468:
  2412  000438  5042               	movf	___fttol@exp1,w,c
  2413  00043A  A4D8               	btfss	status,2,c
  2414  00043C  D7F7               	goto	i2l469
  2415  00043E                     i2u87_40:
  2416  00043E  503D               	movf	___fttol@sign1,w,c
  2417  000440  B4D8               	btfsc	status,2,c
  2418  000442  D008               	goto	i2l471
  2419  000444  1E41               	comf	___fttol@lval+3,f,c
  2420  000446  1E40               	comf	___fttol@lval+2,f,c
  2421  000448  1E3F               	comf	___fttol@lval+1,f,c
  2422  00044A  6C3E               	negf	___fttol@lval,c
  2423  00044C  0E00               	movlw	0
  2424  00044E  223F               	addwfc	___fttol@lval+1,f,c
  2425  000450  2240               	addwfc	___fttol@lval+2,f,c
  2426  000452  2241               	addwfc	___fttol@lval+3,f,c
  2427  000454                     i2l471:
  2428  000454  C03E  F034         	movff	___fttol@lval,?___fttol
  2429  000458  C03F  F035         	movff	___fttol@lval+1,?___fttol+1
  2430  00045C  C040  F036         	movff	___fttol@lval+2,?___fttol+2
  2431  000460  C041  F037         	movff	___fttol@lval+3,?___fttol+3
  2432  000464  0012               	return	
  2433  000466                     __end_of___fttol:
  2434                           	opt stack 0
  2435                           pclatu	equ	0xFFB
  2436                           pclath	equ	0xFFA
  2437                           tblptru	equ	0xFF8
  2438                           tblptrh	equ	0xFF7
  2439                           tblptrl	equ	0xFF6
  2440                           tablat	equ	0xFF5
  2441                           prodh	equ	0xFF4
  2442                           prodl	equ	0xFF3
  2443                           intcon	equ	0xFF2
  2444                           fsr0h	equ	0xFEA
  2445                           fsr0l	equ	0xFE9
  2446                           wreg	equ	0xFE8
  2447                           fsr1h	equ	0xFE2
  2448                           fsr1l	equ	0xFE1
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function ___ftmul *****************
  2454 ;; Defined at:
  2455 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  f1              3   36[COMRAM] float 
  2458 ;;  f2              3   39[COMRAM] float 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  f3_as_produc    3   46[COMRAM] unsigned um
  2461 ;;  sign            1   50[COMRAM] unsigned char 
  2462 ;;  cntr            1   49[COMRAM] unsigned char 
  2463 ;;  exp             1   45[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  3   36[COMRAM] float 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2473 ;;      Params:         6       0       0       0       0       0       0       0       0
  2474 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2475 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2476 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2477 ;;Total ram usage:       15 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    1
  2480 ;; This function calls:
  2481 ;;		___ftpack
  2482 ;; This function is called by:
  2483 ;;		_PWM1_duty
  2484 ;;		_PWM2_duty
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text18
  2489  000466                     __ptext18:
  2490                           	opt stack 0
  2491  000466                     ___ftmul:
  2492                           	opt stack 24
  2493                           
  2494                           ;incstack = 0
  2495  000466  C027  F02B         	movff	___ftmul@f1+2,??___ftmul
  2496  00046A  6A2C               	clrf	(??___ftmul+1)& (0+255),c
  2497  00046C  6A2D               	clrf	(??___ftmul+2)& (0+255),c
  2498  00046E  3426               	rlcf	___ftmul@f1+1,w,c
  2499  000470  362B               	rlcf	??___ftmul& (0+255),f,c
  2500  000472  E301               	bnc	u75_41
  2501  000474  802C               	bsf	(??___ftmul+1)& (0+255),0,c
  2502  000476                     u75_41:
  2503  000476  502B               	movf	??___ftmul,w,c
  2504  000478  6E2E               	movwf	___ftmul@exp,c
  2505  00047A  502E               	movf	___ftmul@exp,w,c
  2506  00047C  A4D8               	btfss	status,2,c
  2507  00047E  D007               	goto	i2l439
  2508  000480  0E00               	movlw	0
  2509  000482  6E25               	movwf	?___ftmul,c
  2510  000484  0E00               	movlw	0
  2511  000486  6E26               	movwf	?___ftmul+1,c
  2512  000488  0E00               	movlw	0
  2513  00048A  6E27               	movwf	?___ftmul+2,c
  2514  00048C  0012               	return	
  2515  00048E                     i2l439:
  2516  00048E  C02A  F02B         	movff	___ftmul@f2+2,??___ftmul
  2517  000492  6A2C               	clrf	(??___ftmul+1)& (0+255),c
  2518  000494  6A2D               	clrf	(??___ftmul+2)& (0+255),c
  2519  000496  3429               	rlcf	___ftmul@f2+1,w,c
  2520  000498  362B               	rlcf	??___ftmul& (0+255),f,c
  2521  00049A  E301               	bnc	u77_41
  2522  00049C  802C               	bsf	(??___ftmul+1)& (0+255),0,c
  2523  00049E                     u77_41:
  2524  00049E  502B               	movf	??___ftmul,w,c
  2525  0004A0  6E33               	movwf	___ftmul@sign,c
  2526  0004A2  5033               	movf	___ftmul@sign,w,c
  2527  0004A4  A4D8               	btfss	status,2,c
  2528  0004A6  D007               	goto	i2l441
  2529  0004A8  0E00               	movlw	0
  2530  0004AA  6E25               	movwf	?___ftmul,c
  2531  0004AC  0E00               	movlw	0
  2532  0004AE  6E26               	movwf	?___ftmul+1,c
  2533  0004B0  0E00               	movlw	0
  2534  0004B2  6E27               	movwf	?___ftmul+2,c
  2535  0004B4  0012               	return	
  2536  0004B6                     i2l441:
  2537  0004B6  5033               	movf	___ftmul@sign,w,c
  2538  0004B8  0F7B               	addlw	123
  2539  0004BA  262E               	addwf	___ftmul@exp,f,c
  2540  0004BC  C027  F033         	movff	___ftmul@f1+2,___ftmul@sign
  2541  0004C0  502A               	movf	___ftmul@f2+2,w,c
  2542  0004C2  1A33               	xorwf	___ftmul@sign,f,c
  2543  0004C4  0E80               	movlw	128
  2544  0004C6  1633               	andwf	___ftmul@sign,f,c
  2545  0004C8  8E26               	bsf	___ftmul@f1+1,7,c
  2546  0004CA  8E29               	bsf	___ftmul@f2+1,7,c
  2547  0004CC  0EFF               	movlw	255
  2548  0004CE  1628               	andwf	___ftmul@f2,f,c
  2549  0004D0  0EFF               	movlw	255
  2550  0004D2  1629               	andwf	___ftmul@f2+1,f,c
  2551  0004D4  0E00               	movlw	0
  2552  0004D6  162A               	andwf	___ftmul@f2+2,f,c
  2553  0004D8  0E00               	movlw	0
  2554  0004DA  6E2F               	movwf	___ftmul@f3_as_product,c
  2555  0004DC  0E00               	movlw	0
  2556  0004DE  6E30               	movwf	___ftmul@f3_as_product+1,c
  2557  0004E0  0E00               	movlw	0
  2558  0004E2  6E31               	movwf	___ftmul@f3_as_product+2,c
  2559  0004E4  0E07               	movlw	7
  2560  0004E6  6E32               	movwf	___ftmul@cntr,c
  2561  0004E8  A025               	btfss	___ftmul@f1,0,c
  2562  0004EA  D006               	goto	i2l443
  2563  0004EC  5028               	movf	___ftmul@f2,w,c
  2564  0004EE  262F               	addwf	___ftmul@f3_as_product,f,c
  2565  0004F0  5029               	movf	___ftmul@f2+1,w,c
  2566  0004F2  2230               	addwfc	___ftmul@f3_as_product+1,f,c
  2567  0004F4  502A               	movf	___ftmul@f2+2,w,c
  2568  0004F6  2231               	addwfc	___ftmul@f3_as_product+2,f,c
  2569  0004F8                     i2l443:
  2570  0004F8  90D8               	bcf	status,0,c
  2571  0004FA  3227               	rrcf	___ftmul@f1+2,f,c
  2572  0004FC  3226               	rrcf	___ftmul@f1+1,f,c
  2573  0004FE  3225               	rrcf	___ftmul@f1,f,c
  2574  000500  90D8               	bcf	status,0,c
  2575  000502  3628               	rlcf	___ftmul@f2,f,c
  2576  000504  3629               	rlcf	___ftmul@f2+1,f,c
  2577  000506  362A               	rlcf	___ftmul@f2+2,f,c
  2578  000508  2E32               	decfsz	___ftmul@cntr,f,c
  2579  00050A  D7EE               	goto	i2l442
  2580  00050C  0E09               	movlw	9
  2581  00050E  6E32               	movwf	___ftmul@cntr,c
  2582  000510  A025               	btfss	___ftmul@f1,0,c
  2583  000512  D006               	goto	i2l446
  2584  000514  5028               	movf	___ftmul@f2,w,c
  2585  000516  262F               	addwf	___ftmul@f3_as_product,f,c
  2586  000518  5029               	movf	___ftmul@f2+1,w,c
  2587  00051A  2230               	addwfc	___ftmul@f3_as_product+1,f,c
  2588  00051C  502A               	movf	___ftmul@f2+2,w,c
  2589  00051E  2231               	addwfc	___ftmul@f3_as_product+2,f,c
  2590  000520                     i2l446:
  2591  000520  90D8               	bcf	status,0,c
  2592  000522  3227               	rrcf	___ftmul@f1+2,f,c
  2593  000524  3226               	rrcf	___ftmul@f1+1,f,c
  2594  000526  3225               	rrcf	___ftmul@f1,f,c
  2595  000528  90D8               	bcf	status,0,c
  2596  00052A  3231               	rrcf	___ftmul@f3_as_product+2,f,c
  2597  00052C  3230               	rrcf	___ftmul@f3_as_product+1,f,c
  2598  00052E  322F               	rrcf	___ftmul@f3_as_product,f,c
  2599  000530  2E32               	decfsz	___ftmul@cntr,f,c
  2600  000532  D7EE               	goto	i2l445
  2601  000534  C02F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2602  000538  C030  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2603  00053C  C031  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2604  000540  C02E  F004         	movff	___ftmul@exp,___ftpack@exp
  2605  000544  C033  F005         	movff	___ftmul@sign,___ftpack@sign
  2606  000548  ECED  F003         	call	___ftpack	;wreg free
  2607  00054C  C001  F025         	movff	?___ftpack,?___ftmul
  2608  000550  C002  F026         	movff	?___ftpack+1,?___ftmul+1
  2609  000554  C003  F027         	movff	?___ftpack+2,?___ftmul+2
  2610  000558  0012               	return	
  2611  00055A                     __end_of___ftmul:
  2612                           	opt stack 0
  2613                           pclatu	equ	0xFFB
  2614                           pclath	equ	0xFFA
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           intcon	equ	0xFF2
  2622                           fsr0h	equ	0xFEA
  2623                           fsr0l	equ	0xFE9
  2624                           wreg	equ	0xFE8
  2625                           fsr1h	equ	0xFE2
  2626                           fsr1l	equ	0xFE1
  2627                           fsr2h	equ	0xFDA
  2628                           fsr2l	equ	0xFD9
  2629                           status	equ	0xFD8
  2630                           
  2631 ;; *************** function ___ftdiv *****************
  2632 ;; Defined at:
  2633 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  f1              3   21[COMRAM] float 
  2636 ;;  f2              3   24[COMRAM] float 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  f3              3   31[COMRAM] float 
  2639 ;;  sign            1   35[COMRAM] unsigned char 
  2640 ;;  exp             1   34[COMRAM] unsigned char 
  2641 ;;  cntr            1   30[COMRAM] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  3   21[COMRAM] float 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2651 ;;      Params:         6       0       0       0       0       0       0       0       0
  2652 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2653 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2654 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2655 ;;Total ram usage:       15 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		___ftpack
  2660 ;; This function is called by:
  2661 ;;		_PWM1_duty
  2662 ;;		_PWM2_duty
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text19
  2667  00055A                     __ptext19:
  2668                           	opt stack 0
  2669  00055A                     ___ftdiv:
  2670                           	opt stack 24
  2671                           
  2672                           ;incstack = 0
  2673  00055A  C018  F01C         	movff	___ftdiv@f1+2,??___ftdiv
  2674  00055E  6A1D               	clrf	(??___ftdiv+1)& (0+255),c
  2675  000560  6A1E               	clrf	(??___ftdiv+2)& (0+255),c
  2676  000562  3417               	rlcf	___ftdiv@f1+1,w,c
  2677  000564  361C               	rlcf	??___ftdiv& (0+255),f,c
  2678  000566  E301               	bnc	u70_41
  2679  000568  801D               	bsf	(??___ftdiv+1)& (0+255),0,c
  2680  00056A                     u70_41:
  2681  00056A  501C               	movf	??___ftdiv,w,c
  2682  00056C  6E23               	movwf	___ftdiv@exp,c
  2683  00056E  5023               	movf	___ftdiv@exp,w,c
  2684  000570  A4D8               	btfss	status,2,c
  2685  000572  D007               	goto	i2l424
  2686  000574  0E00               	movlw	0
  2687  000576  6E16               	movwf	?___ftdiv,c
  2688  000578  0E00               	movlw	0
  2689  00057A  6E17               	movwf	?___ftdiv+1,c
  2690  00057C  0E00               	movlw	0
  2691  00057E  6E18               	movwf	?___ftdiv+2,c
  2692  000580  0012               	return	
  2693  000582                     i2l424:
  2694  000582  C01B  F01C         	movff	___ftdiv@f2+2,??___ftdiv
  2695  000586  6A1D               	clrf	(??___ftdiv+1)& (0+255),c
  2696  000588  6A1E               	clrf	(??___ftdiv+2)& (0+255),c
  2697  00058A  341A               	rlcf	___ftdiv@f2+1,w,c
  2698  00058C  361C               	rlcf	??___ftdiv& (0+255),f,c
  2699  00058E  E301               	bnc	u72_41
  2700  000590  801D               	bsf	(??___ftdiv+1)& (0+255),0,c
  2701  000592                     u72_41:
  2702  000592  501C               	movf	??___ftdiv,w,c
  2703  000594  6E24               	movwf	___ftdiv@sign,c
  2704  000596  5024               	movf	___ftdiv@sign,w,c
  2705  000598  A4D8               	btfss	status,2,c
  2706  00059A  D007               	goto	i2l426
  2707  00059C  0E00               	movlw	0
  2708  00059E  6E16               	movwf	?___ftdiv,c
  2709  0005A0  0E00               	movlw	0
  2710  0005A2  6E17               	movwf	?___ftdiv+1,c
  2711  0005A4  0E00               	movlw	0
  2712  0005A6  6E18               	movwf	?___ftdiv+2,c
  2713  0005A8  0012               	return	
  2714  0005AA                     i2l426:
  2715  0005AA  0E00               	movlw	0
  2716  0005AC  6E20               	movwf	___ftdiv@f3,c
  2717  0005AE  0E00               	movlw	0
  2718  0005B0  6E21               	movwf	___ftdiv@f3+1,c
  2719  0005B2  0E00               	movlw	0
  2720  0005B4  6E22               	movwf	___ftdiv@f3+2,c
  2721  0005B6  5024               	movf	___ftdiv@sign,w,c
  2722  0005B8  0F89               	addlw	137
  2723  0005BA  5E23               	subwf	___ftdiv@exp,f,c
  2724  0005BC  C018  F024         	movff	___ftdiv@f1+2,___ftdiv@sign
  2725  0005C0  501B               	movf	___ftdiv@f2+2,w,c
  2726  0005C2  1A24               	xorwf	___ftdiv@sign,f,c
  2727  0005C4  0E80               	movlw	128
  2728  0005C6  1624               	andwf	___ftdiv@sign,f,c
  2729  0005C8  8E17               	bsf	___ftdiv@f1+1,7,c
  2730  0005CA  0EFF               	movlw	255
  2731  0005CC  1616               	andwf	___ftdiv@f1,f,c
  2732  0005CE  0EFF               	movlw	255
  2733  0005D0  1617               	andwf	___ftdiv@f1+1,f,c
  2734  0005D2  0E00               	movlw	0
  2735  0005D4  1618               	andwf	___ftdiv@f1+2,f,c
  2736  0005D6  8E1A               	bsf	___ftdiv@f2+1,7,c
  2737  0005D8  0EFF               	movlw	255
  2738  0005DA  1619               	andwf	___ftdiv@f2,f,c
  2739  0005DC  0EFF               	movlw	255
  2740  0005DE  161A               	andwf	___ftdiv@f2+1,f,c
  2741  0005E0  0E00               	movlw	0
  2742  0005E2  161B               	andwf	___ftdiv@f2+2,f,c
  2743  0005E4  0E18               	movlw	24
  2744  0005E6  6E1F               	movwf	___ftdiv@cntr,c
  2745  0005E8  90D8               	bcf	status,0,c
  2746  0005EA  3620               	rlcf	___ftdiv@f3,f,c
  2747  0005EC  3621               	rlcf	___ftdiv@f3+1,f,c
  2748  0005EE  3622               	rlcf	___ftdiv@f3+2,f,c
  2749  0005F0  5019               	movf	___ftdiv@f2,w,c
  2750  0005F2  5C16               	subwf	___ftdiv@f1,w,c
  2751  0005F4  501A               	movf	___ftdiv@f2+1,w,c
  2752  0005F6  5817               	subwfb	___ftdiv@f1+1,w,c
  2753  0005F8  501B               	movf	___ftdiv@f2+2,w,c
  2754  0005FA  5818               	subwfb	___ftdiv@f1+2,w,c
  2755  0005FC  A0D8               	btfss	status,0,c
  2756  0005FE  D007               	goto	i2l428
  2757  000600  5019               	movf	___ftdiv@f2,w,c
  2758  000602  5E16               	subwf	___ftdiv@f1,f,c
  2759  000604  501A               	movf	___ftdiv@f2+1,w,c
  2760  000606  5A17               	subwfb	___ftdiv@f1+1,f,c
  2761  000608  501B               	movf	___ftdiv@f2+2,w,c
  2762  00060A  5A18               	subwfb	___ftdiv@f1+2,f,c
  2763  00060C  8020               	bsf	___ftdiv@f3,0,c
  2764  00060E                     i2l428:
  2765  00060E  90D8               	bcf	status,0,c
  2766  000610  3616               	rlcf	___ftdiv@f1,f,c
  2767  000612  3617               	rlcf	___ftdiv@f1+1,f,c
  2768  000614  3618               	rlcf	___ftdiv@f1+2,f,c
  2769  000616  2E1F               	decfsz	___ftdiv@cntr,f,c
  2770  000618  D7E7               	goto	i2l427
  2771  00061A  C020  F001         	movff	___ftdiv@f3,___ftpack@arg
  2772  00061E  C021  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2773  000622  C022  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2774  000626  C023  F004         	movff	___ftdiv@exp,___ftpack@exp
  2775  00062A  C024  F005         	movff	___ftdiv@sign,___ftpack@sign
  2776  00062E  ECED  F003         	call	___ftpack	;wreg free
  2777  000632  C001  F016         	movff	?___ftpack,?___ftdiv
  2778  000636  C002  F017         	movff	?___ftpack+1,?___ftdiv+1
  2779  00063A  C003  F018         	movff	?___ftpack+2,?___ftdiv+2
  2780  00063E  0012               	return	
  2781  000640                     __end_of___ftdiv:
  2782                           	opt stack 0
  2783                           pclatu	equ	0xFFB
  2784                           pclath	equ	0xFFA
  2785                           tblptru	equ	0xFF8
  2786                           tblptrh	equ	0xFF7
  2787                           tblptrl	equ	0xFF6
  2788                           tablat	equ	0xFF5
  2789                           prodh	equ	0xFF4
  2790                           prodl	equ	0xFF3
  2791                           intcon	equ	0xFF2
  2792                           fsr0h	equ	0xFEA
  2793                           fsr0l	equ	0xFE9
  2794                           wreg	equ	0xFE8
  2795                           fsr1h	equ	0xFE2
  2796                           fsr1l	equ	0xFE1
  2797                           fsr2h	equ	0xFDA
  2798                           fsr2l	equ	0xFD9
  2799                           status	equ	0xFD8
  2800                           
  2801 ;; *************** function ___ftpack *****************
  2802 ;; Defined at:
  2803 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  arg             3    0[COMRAM] unsigned um
  2806 ;;  exp             1    3[COMRAM] unsigned char 
  2807 ;;  sign            1    4[COMRAM] unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  3    0[COMRAM] float 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2819 ;;      Params:         5       0       0       0       0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2821 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2822 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2823 ;;Total ram usage:        8 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		___ftdiv
  2829 ;;		___ftmul
  2830 ;;		___lwtoft
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text20
  2835  0007DA                     __ptext20:
  2836                           	opt stack 0
  2837  0007DA                     ___ftpack:
  2838                           	opt stack 24
  2839                           
  2840                           ;incstack = 0
  2841  0007DA  5004               	movf	___ftpack@exp,w,c
  2842  0007DC  B4D8               	btfsc	status,2,c
  2843  0007DE  D005               	goto	i2u57_40
  2844  0007E0  5001               	movf	___ftpack@arg,w,c
  2845  0007E2  1002               	iorwf	___ftpack@arg+1,w,c
  2846  0007E4  1003               	iorwf	___ftpack@arg+2,w,c
  2847  0007E6  A4D8               	btfss	status,2,c
  2848  0007E8  D00C               	goto	i2l360
  2849  0007EA                     i2u57_40:
  2850  0007EA  0E00               	movlw	0
  2851  0007EC  6E01               	movwf	?___ftpack,c
  2852  0007EE  0E00               	movlw	0
  2853  0007F0  6E02               	movwf	?___ftpack+1,c
  2854  0007F2  0E00               	movlw	0
  2855  0007F4  6E03               	movwf	?___ftpack+2,c
  2856  0007F6  0012               	return	
  2857  0007F8  2A04               	incf	___ftpack@exp,f,c
  2858  0007FA  90D8               	bcf	status,0,c
  2859  0007FC  3203               	rrcf	___ftpack@arg+2,f,c
  2860  0007FE  3202               	rrcf	___ftpack@arg+1,f,c
  2861  000800  3201               	rrcf	___ftpack@arg,f,c
  2862  000802                     i2l360:
  2863  000802  0E00               	movlw	0
  2864  000804  1401               	andwf	___ftpack@arg,w,c
  2865  000806  6E06               	movwf	??___ftpack& (0+255),c
  2866  000808  0E00               	movlw	0
  2867  00080A  1402               	andwf	___ftpack@arg+1,w,c
  2868  00080C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2869  00080E  0EFE               	movlw	254
  2870  000810  1403               	andwf	___ftpack@arg+2,w,c
  2871  000812  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2872  000814  5006               	movf	??___ftpack,w,c
  2873  000816  1007               	iorwf	??___ftpack+1,w,c
  2874  000818  1008               	iorwf	??___ftpack+2,w,c
  2875  00081A  B4D8               	btfsc	status,2,c
  2876  00081C  D00C               	goto	i2l363
  2877  00081E  D7EC               	goto	i2l361
  2878  000820  2A04               	incf	___ftpack@exp,f,c
  2879  000822  0E01               	movlw	1
  2880  000824  2601               	addwf	___ftpack@arg,f,c
  2881  000826  0E00               	movlw	0
  2882  000828  2202               	addwfc	___ftpack@arg+1,f,c
  2883  00082A  0E00               	movlw	0
  2884  00082C  2203               	addwfc	___ftpack@arg+2,f,c
  2885  00082E  90D8               	bcf	status,0,c
  2886  000830  3203               	rrcf	___ftpack@arg+2,f,c
  2887  000832  3202               	rrcf	___ftpack@arg+1,f,c
  2888  000834  3201               	rrcf	___ftpack@arg,f,c
  2889  000836                     i2l363:
  2890  000836  0E00               	movlw	0
  2891  000838  1401               	andwf	___ftpack@arg,w,c
  2892  00083A  6E06               	movwf	??___ftpack& (0+255),c
  2893  00083C  0E00               	movlw	0
  2894  00083E  1402               	andwf	___ftpack@arg+1,w,c
  2895  000840  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2896  000842  0EFF               	movlw	255
  2897  000844  1403               	andwf	___ftpack@arg+2,w,c
  2898  000846  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2899  000848  5006               	movf	??___ftpack,w,c
  2900  00084A  1007               	iorwf	??___ftpack+1,w,c
  2901  00084C  1008               	iorwf	??___ftpack+2,w,c
  2902  00084E  B4D8               	btfsc	status,2,c
  2903  000850  D006               	goto	i2l366
  2904  000852  D7E6               	goto	i2l364
  2905  000854  0604               	decf	___ftpack@exp,f,c
  2906  000856  90D8               	bcf	status,0,c
  2907  000858  3601               	rlcf	___ftpack@arg,f,c
  2908  00085A  3602               	rlcf	___ftpack@arg+1,f,c
  2909  00085C  3603               	rlcf	___ftpack@arg+2,f,c
  2910  00085E                     i2l366:
  2911  00085E  BE02               	btfsc	___ftpack@arg+1,7,c
  2912  000860  D003               	goto	i2u61_40
  2913  000862  0E02               	movlw	2
  2914  000864  6004               	cpfslt	___ftpack@exp,c
  2915  000866  D7F6               	goto	i2l367
  2916  000868                     i2u61_40:
  2917  000868  A004               	btfss	___ftpack@exp,0,c
  2918  00086A  9E02               	bcf	___ftpack@arg+1,7,c
  2919  00086C  90D8               	bcf	status,0,c
  2920  00086E  3204               	rrcf	___ftpack@exp,f,c
  2921  000870  5004               	movf	___ftpack@exp,w,c
  2922  000872  1203               	iorwf	___ftpack@arg+2,f,c
  2923  000874  5005               	movf	___ftpack@sign,w,c
  2924  000876  A4D8               	btfss	status,2,c
  2925  000878  8E03               	bsf	___ftpack@arg+2,7,c
  2926  00087A  C001  F001         	movff	___ftpack@arg,?___ftpack
  2927  00087E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2928  000882  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2929  000886  0012               	return	
  2930  000888                     __end_of___ftpack:
  2931                           	opt stack 0
  2932                           pclatu	equ	0xFFB
  2933                           pclath	equ	0xFFA
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           fsr0h	equ	0xFEA
  2942                           fsr0l	equ	0xFE9
  2943                           wreg	equ	0xFE8
  2944                           fsr1h	equ	0xFE2
  2945                           fsr1l	equ	0xFE1
  2946                           fsr2h	equ	0xFDA
  2947                           fsr2l	equ	0xFD9
  2948                           status	equ	0xFD8
  2949                           
  2950 ;; *************** function _PWM_Max_Duty *****************
  2951 ;; Defined at:
  2952 ;;		line 22 in file "main.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2   14[COMRAM] unsigned int 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2968 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2969 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2970 ;;Total ram usage:        4 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    1
  2973 ;; This function calls:
  2974 ;;		i2___aldiv
  2975 ;; This function is called by:
  2976 ;;		_PWM1_duty
  2977 ;;		_PWM2_duty
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text21
  2982  0009CC                     __ptext21:
  2983                           	opt stack 0
  2984  0009CC                     _PWM_Max_Duty:
  2985                           	opt stack 24
  2986                           
  2987                           ;main.c: 23: return(16000000/(fre*16));
  2988                           
  2989                           ;incstack = 0
  2990  0009CC  0E00               	movlw	0
  2991  0009CE  6E01               	movwf	i2___aldiv@dividend,c
  2992  0009D0  0E24               	movlw	36
  2993  0009D2  6E02               	movwf	i2___aldiv@dividend+1,c
  2994  0009D4  0EF4               	movlw	244
  2995  0009D6  6E03               	movwf	i2___aldiv@dividend+2,c
  2996  0009D8  0E00               	movlw	0
  2997  0009DA  6E04               	movwf	i2___aldiv@dividend+3,c
  2998  0009DC  C05B  F011         	movff	_fre,??_PWM_Max_Duty
  2999  0009E0  C05C  F012         	movff	_fre+1,??_PWM_Max_Duty+1
  3000  0009E4  3A11               	swapf	??_PWM_Max_Duty,f,c
  3001  0009E6  3A12               	swapf	??_PWM_Max_Duty+1,f,c
  3002  0009E8  0EF0               	movlw	240
  3003  0009EA  1612               	andwf	??_PWM_Max_Duty+1,f,c
  3004  0009EC  5011               	movf	??_PWM_Max_Duty,w,c
  3005  0009EE  0B0F               	andlw	15
  3006  0009F0  1212               	iorwf	??_PWM_Max_Duty+1,f,c
  3007  0009F2  0EF0               	movlw	240
  3008  0009F4  1611               	andwf	??_PWM_Max_Duty,f,c
  3009  0009F6  C011  F005         	movff	??_PWM_Max_Duty,i2___aldiv@divisor
  3010  0009FA  C012  F006         	movff	??_PWM_Max_Duty+1,i2___aldiv@divisor+1
  3011  0009FE  6A07               	clrf	i2___aldiv@divisor+2,c
  3012  000A00  6A08               	clrf	i2___aldiv@divisor+3,c
  3013  000A02  EC87  F003         	call	i2___aldiv	;wreg free
  3014  000A06  C001  F00F         	movff	?i2___aldiv,?_PWM_Max_Duty
  3015  000A0A  C002  F010         	movff	?i2___aldiv+1,?_PWM_Max_Duty+1
  3016  000A0E  0012               	return	
  3017  000A10                     __end_of_PWM_Max_Duty:
  3018                           	opt stack 0
  3019                           pclatu	equ	0xFFB
  3020                           pclath	equ	0xFFA
  3021                           tblptru	equ	0xFF8
  3022                           tblptrh	equ	0xFF7
  3023                           tblptrl	equ	0xFF6
  3024                           tablat	equ	0xFF5
  3025                           prodh	equ	0xFF4
  3026                           prodl	equ	0xFF3
  3027                           intcon	equ	0xFF2
  3028                           fsr0h	equ	0xFEA
  3029                           fsr0l	equ	0xFE9
  3030                           wreg	equ	0xFE8
  3031                           fsr1h	equ	0xFE2
  3032                           fsr1l	equ	0xFE1
  3033                           fsr2h	equ	0xFDA
  3034                           fsr2l	equ	0xFD9
  3035                           status	equ	0xFD8
  3036                           
  3037 ;; *************** function i2___aldiv *****************
  3038 ;; Defined at:
  3039 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  dividend        4    0[COMRAM] long 
  3042 ;;  divisor         4    4[COMRAM] long 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  __aldiv         4   10[COMRAM] long 
  3045 ;;  __aldiv         1    9[COMRAM] unsigned char 
  3046 ;;  __aldiv         1    8[COMRAM] unsigned char 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  4    0[COMRAM] long 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         8       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3059 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:       14 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_PWM_Max_Duty
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text22
  3070  00070E                     __ptext22:
  3071                           	opt stack 0
  3072  00070E                     i2___aldiv:
  3073                           	opt stack 24
  3074                           
  3075                           ;incstack = 0
  3076  00070E  0E00               	movlw	0
  3077  000710  6E0A               	movwf	i2___aldiv@sign,c
  3078  000712  AE08               	btfss	i2___aldiv@divisor+3,7,c
  3079  000714  D00A               	goto	i2l201
  3080  000716  1E08               	comf	i2___aldiv@divisor+3,f,c
  3081  000718  1E07               	comf	i2___aldiv@divisor+2,f,c
  3082  00071A  1E06               	comf	i2___aldiv@divisor+1,f,c
  3083  00071C  6C05               	negf	i2___aldiv@divisor,c
  3084  00071E  0E00               	movlw	0
  3085  000720  2206               	addwfc	i2___aldiv@divisor+1,f,c
  3086  000722  2207               	addwfc	i2___aldiv@divisor+2,f,c
  3087  000724  2208               	addwfc	i2___aldiv@divisor+3,f,c
  3088  000726  0E01               	movlw	1
  3089  000728  6E0A               	movwf	i2___aldiv@sign,c
  3090  00072A                     i2l201:
  3091  00072A  AE04               	btfss	i2___aldiv@dividend+3,7,c
  3092  00072C  D00A               	goto	i2l202
  3093  00072E  1E04               	comf	i2___aldiv@dividend+3,f,c
  3094  000730  1E03               	comf	i2___aldiv@dividend+2,f,c
  3095  000732  1E02               	comf	i2___aldiv@dividend+1,f,c
  3096  000734  6C01               	negf	i2___aldiv@dividend,c
  3097  000736  0E00               	movlw	0
  3098  000738  2202               	addwfc	i2___aldiv@dividend+1,f,c
  3099  00073A  2203               	addwfc	i2___aldiv@dividend+2,f,c
  3100  00073C  2204               	addwfc	i2___aldiv@dividend+3,f,c
  3101  00073E  0E01               	movlw	1
  3102  000740  1A0A               	xorwf	i2___aldiv@sign,f,c
  3103  000742                     i2l202:
  3104  000742  0E00               	movlw	0
  3105  000744  6E0B               	movwf	i2___aldiv@quotient,c
  3106  000746  0E00               	movlw	0
  3107  000748  6E0C               	movwf	i2___aldiv@quotient+1,c
  3108  00074A  0E00               	movlw	0
  3109  00074C  6E0D               	movwf	i2___aldiv@quotient+2,c
  3110  00074E  0E00               	movlw	0
  3111  000750  6E0E               	movwf	i2___aldiv@quotient+3,c
  3112  000752  5005               	movf	i2___aldiv@divisor,w,c
  3113  000754  1006               	iorwf	i2___aldiv@divisor+1,w,c
  3114  000756  1007               	iorwf	i2___aldiv@divisor+2,w,c
  3115  000758  1008               	iorwf	i2___aldiv@divisor+3,w,c
  3116  00075A  B4D8               	btfsc	status,2,c
  3117  00075C  D02A               	goto	i2l209
  3118  00075E  0E01               	movlw	1
  3119  000760  6E09               	movwf	i2___aldiv@counter,c
  3120  000762  D006               	goto	i2l204
  3121  000764  90D8               	bcf	status,0,c
  3122  000766  3605               	rlcf	i2___aldiv@divisor,f,c
  3123  000768  3606               	rlcf	i2___aldiv@divisor+1,f,c
  3124  00076A  3607               	rlcf	i2___aldiv@divisor+2,f,c
  3125  00076C  3608               	rlcf	i2___aldiv@divisor+3,f,c
  3126  00076E  2A09               	incf	i2___aldiv@counter,f,c
  3127  000770                     i2l204:
  3128  000770  AE08               	btfss	i2___aldiv@divisor+3,7,c
  3129  000772  D7F8               	goto	i2l205
  3130  000774                     i2u67_40:
  3131  000774  90D8               	bcf	status,0,c
  3132  000776  360B               	rlcf	i2___aldiv@quotient,f,c
  3133  000778  360C               	rlcf	i2___aldiv@quotient+1,f,c
  3134  00077A  360D               	rlcf	i2___aldiv@quotient+2,f,c
  3135  00077C  360E               	rlcf	i2___aldiv@quotient+3,f,c
  3136  00077E  5005               	movf	i2___aldiv@divisor,w,c
  3137  000780  5C01               	subwf	i2___aldiv@dividend,w,c
  3138  000782  5006               	movf	i2___aldiv@divisor+1,w,c
  3139  000784  5802               	subwfb	i2___aldiv@dividend+1,w,c
  3140  000786  5007               	movf	i2___aldiv@divisor+2,w,c
  3141  000788  5803               	subwfb	i2___aldiv@dividend+2,w,c
  3142  00078A  5008               	movf	i2___aldiv@divisor+3,w,c
  3143  00078C  5804               	subwfb	i2___aldiv@dividend+3,w,c
  3144  00078E  A0D8               	btfss	status,0,c
  3145  000790  D009               	goto	i2l208
  3146  000792  5005               	movf	i2___aldiv@divisor,w,c
  3147  000794  5E01               	subwf	i2___aldiv@dividend,f,c
  3148  000796  5006               	movf	i2___aldiv@divisor+1,w,c
  3149  000798  5A02               	subwfb	i2___aldiv@dividend+1,f,c
  3150  00079A  5007               	movf	i2___aldiv@divisor+2,w,c
  3151  00079C  5A03               	subwfb	i2___aldiv@dividend+2,f,c
  3152  00079E  5008               	movf	i2___aldiv@divisor+3,w,c
  3153  0007A0  5A04               	subwfb	i2___aldiv@dividend+3,f,c
  3154  0007A2  800B               	bsf	i2___aldiv@quotient,0,c
  3155  0007A4                     i2l208:
  3156  0007A4  90D8               	bcf	status,0,c
  3157  0007A6  3208               	rrcf	i2___aldiv@divisor+3,f,c
  3158  0007A8  3207               	rrcf	i2___aldiv@divisor+2,f,c
  3159  0007AA  3206               	rrcf	i2___aldiv@divisor+1,f,c
  3160  0007AC  3205               	rrcf	i2___aldiv@divisor,f,c
  3161  0007AE  2E09               	decfsz	i2___aldiv@counter,f,c
  3162  0007B0  D7E1               	goto	i2u67_40
  3163  0007B2                     i2l209:
  3164  0007B2  500A               	movf	i2___aldiv@sign,w,c
  3165  0007B4  B4D8               	btfsc	status,2,c
  3166  0007B6  D008               	goto	i2l210
  3167  0007B8  1E0E               	comf	i2___aldiv@quotient+3,f,c
  3168  0007BA  1E0D               	comf	i2___aldiv@quotient+2,f,c
  3169  0007BC  1E0C               	comf	i2___aldiv@quotient+1,f,c
  3170  0007BE  6C0B               	negf	i2___aldiv@quotient,c
  3171  0007C0  0E00               	movlw	0
  3172  0007C2  220C               	addwfc	i2___aldiv@quotient+1,f,c
  3173  0007C4  220D               	addwfc	i2___aldiv@quotient+2,f,c
  3174  0007C6  220E               	addwfc	i2___aldiv@quotient+3,f,c
  3175  0007C8                     i2l210:
  3176  0007C8  C00B  F001         	movff	i2___aldiv@quotient,?i2___aldiv
  3177  0007CC  C00C  F002         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
  3178  0007D0  C00D  F003         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
  3179  0007D4  C00E  F004         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
  3180  0007D8  0012               	return	
  3181  0007DA                     __end_ofi2___aldiv:
  3182                           	opt stack 0
  3183                           pclatu	equ	0xFFB
  3184                           pclath	equ	0xFFA
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           prodh	equ	0xFF4
  3190                           prodl	equ	0xFF3
  3191                           intcon	equ	0xFF2
  3192                           fsr0h	equ	0xFEA
  3193                           fsr0l	equ	0xFE9
  3194                           wreg	equ	0xFE8
  3195                           fsr1h	equ	0xFE2
  3196                           fsr1l	equ	0xFE1
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _Frente *****************
  3202 ;; Defined at:
  3203 ;;		line 102 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		None
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_routine
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text23
  3231  000AFC                     __ptext23:
  3232                           	opt stack 0
  3233  000AFC                     _Frente:
  3234                           	opt stack 27
  3235                           
  3236                           ;main.c: 104: PORTDbits.RD0 = 0;
  3237                           
  3238                           ;incstack = 0
  3239  000AFC  9083               	bcf	3971,0,c	;volatile
  3240                           
  3241                           ;main.c: 105: PORTDbits.RD1 = 1;
  3242  000AFE  8283               	bsf	3971,1,c	;volatile
  3243  000B00  0012               	return		;funcret
  3244  000B02                     __end_of_Frente:
  3245                           	opt stack 0
  3246  0000                     pclatu	equ	0xFFB
  3247                           pclath	equ	0xFFA
  3248                           tblptru	equ	0xFF8
  3249                           tblptrh	equ	0xFF7
  3250                           tblptrl	equ	0xFF6
  3251                           tablat	equ	0xFF5
  3252                           prodh	equ	0xFF4
  3253                           prodl	equ	0xFF3
  3254                           intcon	equ	0xFF2
  3255                           fsr0h	equ	0xFEA
  3256                           fsr0l	equ	0xFE9
  3257                           wreg	equ	0xFE8
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           fsr2h	equ	0xFDA
  3261                           fsr2l	equ	0xFD9
  3262                           status	equ	0xFD8
  3263                           pclatu	equ	0xFFB
  3264                           pclath	equ	0xFFA
  3265                           tblptru	equ	0xFF8
  3266                           tblptrh	equ	0xFF7
  3267                           tblptrl	equ	0xFF6
  3268                           tablat	equ	0xFF5
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           intcon	equ	0xFF2
  3272                           fsr0h	equ	0xFEA
  3273                           fsr0l	equ	0xFE9
  3274                           wreg	equ	0xFE8
  3275                           fsr1h	equ	0xFE2
  3276                           fsr1l	equ	0xFE1
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281                           	psect	rparam
  3282  0000                     pclatu	equ	0xFFB
  3283                           pclath	equ	0xFFA
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           intcon	equ	0xFF2
  3291                           fsr0h	equ	0xFEA
  3292                           fsr0l	equ	0xFE9
  3293                           wreg	equ	0xFE8
  3294                           fsr1h	equ	0xFE2
  3295                           fsr1l	equ	0xFE1
  3296                           fsr2h	equ	0xFDA
  3297                           fsr2l	equ	0xFD9
  3298                           status	equ	0xFD8
  3299                           
  3300                           	psect	temp
  3301  00005D                     btemp:
  3302                           	opt stack 0
  3303  00005D                     	ds	1
  3304  0000                     int$flags	set	btemp
  3305  0000                     wtemp6	set	btemp+1
  3306                           pclatu	equ	0xFFB
  3307                           pclath	equ	0xFFA
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           intcon	equ	0xFF2
  3315                           fsr0h	equ	0xFEA
  3316                           fsr0l	equ	0xFE9
  3317                           wreg	equ	0xFE8
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     23      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _routine in COMRAM

    _curvaEsq->_PWM1_duty
    _curvaEsq->_PWM2_duty
    _curvaDir->_PWM1_duty
    _curvaDir->_PWM2_duty
    _Frente_Re->_PWM1_duty
    _Frente_Re->_PWM2_duty
    _PWM2_duty->___fttol
    _PWM1_duty->___fttol
    ___lwtoft->_PWM_Max_Duty
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    _PWM_Max_Duty->i2___aldiv

Critical Paths under _main in BANK0

    _main->_init_USART
    _init_USART->___lldiv
    _PWM_init->___aldiv

Critical Paths under _routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _routine in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1085
                                             21 BANK0      2     2      0
                           _PWM_init
                          _PWM_start
                             _Parado
                         _init_USART
 ---------------------------------------------------------------------------------
 (1) _init_USART                                           8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _Parado                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             4     2      2     672
                                             14 BANK0      4     2      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     552
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _routine                                             20    20      0   66501
                                             70 COMRAM    20    20      0
                             _Frente
                          _Frente_Re
                                 _Re
                           _curvaDir
                           _curvaEsq
                            _sendMsg
                           i2_Parado
 ---------------------------------------------------------------------------------
 (4) i2_Parado                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _sendMsg                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _curvaEsq                                             0     0      0   22162
                          _PWM1_duty
                          _PWM2_duty
 ---------------------------------------------------------------------------------
 (4) _curvaDir                                             0     0      0   22162
                          _PWM1_duty
                          _PWM2_duty
 ---------------------------------------------------------------------------------
 (4) _Re                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Frente_Re                                            0     0      0   22162
                          _PWM1_duty
                          _PWM2_duty
 ---------------------------------------------------------------------------------
 (5) _PWM2_duty                                            4     2      2   11081
                                             66 COMRAM     4     2      2
                       _PWM_Max_Duty
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (5) _PWM1_duty                                            4     2      2   11081
                                             66 COMRAM     4     2      2
                       _PWM_Max_Duty
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (6) ___lwtoft                                             3     0      3    2905
                                             18 COMRAM     3     0      3
                       _PWM_Max_Duty (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             15    11      4     556
                                             51 COMRAM    15    11      4
                       _PWM_Max_Duty (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    3487
                                             36 COMRAM    15     9      6
                       _PWM_Max_Duty (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    3441
                                             21 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2427
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _PWM_Max_Duty                                         4     2      2     352
                                             14 COMRAM     4     2      2
                          i2___aldiv
 ---------------------------------------------------------------------------------
 (7) i2___aldiv                                           14     6      8     352
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) _Frente                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_init
     ___aldiv
   _PWM_start
   _Parado
   _init_USART
     ___lldiv

 _routine (ROOT)
   _Frente
   _Frente_Re
     _PWM1_duty
       _PWM_Max_Duty
         i2___aldiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___ftmul
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___fttol
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftmul (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               _PWM_Max_Duty (ARG)
                 i2___aldiv
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___lwtoft
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftpack (ARG)
     _PWM2_duty
       _PWM_Max_Duty
         i2___aldiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___ftmul
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___fttol
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftmul (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               _PWM_Max_Duty (ARG)
                 i2___aldiv
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___lwtoft
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftpack (ARG)
   _Re
   _curvaDir
     _PWM1_duty
       _PWM_Max_Duty
         i2___aldiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___ftmul
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___fttol
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftmul (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               _PWM_Max_Duty (ARG)
                 i2___aldiv
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___lwtoft
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftpack (ARG)
     _PWM2_duty
       _PWM_Max_Duty
         i2___aldiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___ftmul
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___fttol
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftmul (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               _PWM_Max_Duty (ARG)
                 i2___aldiv
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___lwtoft
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftpack (ARG)
   _curvaEsq
     _PWM1_duty
       _PWM_Max_Duty
         i2___aldiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___ftmul
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___fttol
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftmul (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               _PWM_Max_Duty (ARG)
                 i2___aldiv
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___lwtoft
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftpack (ARG)
     _PWM2_duty
       _PWM_Max_Duty
         i2___aldiv
       ___ftdiv
         ___ftpack
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___ftmul
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___fttol
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___ftmul (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               _PWM_Max_Duty (ARG)
                 i2___aldiv
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _PWM_Max_Duty (ARG)
               i2___aldiv
             ___ftpack (ARG)
         ___lwtoft (ARG)
           _PWM_Max_Duty (ARG)
             i2___aldiv
           ___ftpack (ARG)
       ___lwtoft
         _PWM_Max_Duty (ARG)
           i2___aldiv
         ___ftpack (ARG)
   _sendMsg
   i2_Parado

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
STACK                0      0       0       2        0.0%
DATA                 0      0      73       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      17       5       14.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0      73      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jun 21 06:51:38 2018

                     _Re 0AF6                      ?_Re 0001                      l201 065E  
                    l210 06FC                      l202 0676                      l204 06A4  
                    l205 0698                      l142 0A4C                      l208 06D8  
                    l209 06E6                      l500 08EC                      l501 08FA  
                    l496 08B8                      l497 08AC                      _GIE 007F97  
                    _PR2 000FCB                      _RX9 007D5E                      u980 06A8  
                    _TX9 007D66                      _fre 005B                      wreg 000FE8  
           __CFG_FOSC$HS 000000                     ??_Re 0001             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 001F             ___ftdiv@sign 0024             __CFG_WDT$OFF 000000  
                   _BRGH 007D62                     _CREN 007D5C                     u1020 08BC  
                   u1045 0930                     _PEIE 007F96                     _RCIE 007CED  
                   _RCIF 007CF5             _PWM_Max_Duty 09CC                     _SPEN 007D5F  
                   _TRMT 007D61                     _TXEN 007D65                     _SYNC 007D64  
           __CFG_PWRT$ON 000000                     _main 0A10             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 005D                     prodh 000FF4  
                   prodl 000FF3                     start 000E             ___ftmul@cntr 0032  
           ___param_bank 000000             ___ftmul@sign 0033             ___fttol@exp1 0042  
           ___fttol@lval 003E                    _DC1B0 007DEC                    _DC1B1 007DED  
                  _DC2B0 007DD4                    _DC2B1 007DD5          __end_of___aldiv 070E  
                  ?_main 0001          __end_of___ftdiv 0640          __end_of___lldiv 090C  
        __end_of___ftmul 055A          __end_of___fttol 0466                    i2l201 072A  
                  i2l210 07C8                    i2l202 0742                    i2l130 0098  
                  i2l204 0770                    i2l132 00CA                    i2l205 0764  
                  i2l134 00FE                    i2l208 07A4                    i2l136 0130  
                  i2l209 07B2                    i2l360 0802                    i2l424 0582  
                  i2l361 07F8                    i2l441 04B6                    i2l426 05AA  
                  i2l442 04E8                    i2l363 0836                    i2l427 05E8  
                  i2l443 04F8                    i2l364 0820                    i2l428 060E  
                  i2l460 039E                    i2l445 0510                    i2l366 085E  
                  i2l446 0520                    i2l462 0414                    i2l367 0854  
                  i2l439 048E                    i2l471 0454                    i2l463 0404  
                  i2l468 0438                    i2l469 042C                    _RCREG 000FAE  
                  _SPBRG 000FAF                    u70_41 056A                    u72_41 0592  
                  u81_41 0382                    u75_41 0476                    u77_41 049E  
                  _TXREG 000FAD       __size_of_PWM1_duty 00F8       __size_of_PWM2_duty 00F8  
       __end_ofi2_Parado 0AF6            ___ftpack@sign 0005                    main@i 0075  
        __end_of_sendMsg 0AE0                    pclath 000FFA                    tablat 000FF5  
       __end_of_PWM_init 09CC                    status 000FD8                    wtemp6 005E  
        __end_of_routine 0182       __size_ofi2___aldiv 00CC          __initialization 0AE0  
     __size_of_PWM_start 0014             __end_of_main 0A4E                   ??_main 0075  
          ___fttol@sign1 003D            __activetblptr 000000                   _CCP1M2 007DEA  
                 _CCP1M3 007DEB                   _CCP2M2 007DD2                   _CCP2M3 007DD3  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB           i2___aldiv@sign 000A  
       __end_of___ftpack 0888                   i2l1135 0AD6       __size_of_Frente_Re 001A  
       __end_of___lwtoft 0A72                   _TMR2ON 007E52                   _TRISC1 007CA1  
                 _TRISC2 007CA2                   _TRISD0 007CA8                   _TRISD1 007CA9  
                 _TRISC6 007CA6                   _TRISC7 007CA7                   _Frente 0AFC  
                 _Parado 0AEA                ??___aldiv 0068                ??___ftdiv 001C  
              ??___lldiv 0068        __end_of_PWM1_duty 0372                ??___ftmul 002B  
              ??___fttol 0038        __end_of_PWM2_duty 027A         __end_of_curvaDir 0AA6  
       __end_of_curvaEsq 0A8C    ___ftmul@f3_as_product 002F        __end_ofi2___aldiv 07DA  
              ??_sendMsg 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8        __end_of_PWM_start 0AD4                ??_routine 0047  
             __accesstop 0060  __end_of__initialization 0AE0          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001               ___ftdiv@f1 0016               ___ftdiv@f2 0019  
             ___ftdiv@f3 0020               ___ftmul@f1 0025               ___ftmul@f2 0028  
             ___fttol@f1 0034           __pcstackCOMRAM 0001                ?i2_Parado 0001  
      __end_of_Frente_Re 0AC0               __end_of_Re 0AFC               ___lwtoft@c 0013  
              ?_PWM_init 006E               __pnvCOMRAM 005B                  ?_Frente 0001  
                ?_Parado 0001               ??i2_Parado 0001                ?___ftpack 0001  
                _T2CKPS0 007E50                  _T2CKPS1 007E51                ?___lwtoft 0013  
             ??_PWM_init 0070             PWM_init@freq 006E                  i2u61_40 0868  
                i2u57_40 07EA                  i2u90_40 0356                  i2u67_40 0774  
                i2u83_40 03BC                  i2u83_45 03B4                  i2u91_45 0358  
                i2u93_40 025E                  i2u94_45 0260                  i2u87_40 043E  
              ?_curvaDir 0001                ?_curvaEsq 0001        i2___aldiv@divisor 0005  
      i2___aldiv@counter 0009                  __Hparam 0000          __size_of_Frente 0006  
                __Lparam 0000          __size_of_Parado 0006               _init_USART 090C  
                ___aldiv 0640                  ___ftdiv 055A                  ___lldiv 0888  
                ___ftmul 0466                  ___fttol 0372                  __pcinit 0AE0  
             ??___ftpack 0006                  __ramtop 0800                  __ptext0 0A10  
                __ptext1 090C                  __ptext2 0888                  __ptext3 0AEA  
                __ptext4 0AC0                  __ptext5 0974                  __ptext6 0640  
                __ptext8 0AF0                  __ptext9 0AD4               ??___lwtoft 0016  
       ___aldiv@dividend 0060                  _sendMsg 0AD4                  _routine 0008  
         __pintcode_body 0012     end_of_initialization 0AE0               ??_curvaDir 0047  
             ??_curvaEsq 0047                  int_func 0012          ___lldiv@divisor 0064  
        ___lldiv@counter 006C         ___aldiv@quotient 006A                _PORTDbits 000F83  
              _PWM1_duty 027A                _PWM2_duty 0182                i2___aldiv 070E  
              _PWM_start 0AC0              ___ftdiv@exp 0023              ?_init_USART 006D  
            ___ftmul@exp 002E           __end_of_Frente 0B02           __end_of_Parado 0AF0  
             ?_PWM1_duty 0043               ?_PWM2_duty 0043        __size_ofi2_Parado 0006  
    start_initialization 0AE0                _Frente_Re 0AA6        __size_of_PWM_init 0058  
             ?i2___aldiv 0001            ?_PWM_Max_Duty 000F               ?_PWM_start 0001  
               ??_Frente 0001                 ??_Parado 0060        __size_of___ftpack 00AE  
             ?_Frente_Re 0001        __size_of___lwtoft 0024            __pcstackBANK0 0060  
    __size_of_init_USART 0068           ??_PWM_Max_Duty 0011        __size_of_curvaDir 001A  
      __size_of_curvaEsq 001A                __pintcode 0008               sendMsg@msg 0001  
               ?___aldiv 0060                 ?___ftdiv 0016                 ?___lldiv 0060  
               ?___ftmul 0025                 ?___fttol 0034              ??_PWM1_duty 0045  
            ??_PWM2_duty 0045                 ?_sendMsg 0001              ??i2___aldiv 0009  
               ?_routine 0001              __size_of_Re 0006          ___aldiv@divisor 0064  
            ??_PWM_start 0060          ___aldiv@counter 0068                 i2u110_47 0086  
               i2u111_47 00B8                 i2u112_47 00EA                 i2u113_47 011E  
               i2_Parado 0AF0                 _PWM_init 0974              ??_Frente_Re 0047  
     i2___aldiv@dividend 0001                 __Hrparam 0000             ??_init_USART 0071  
     init_USART@baudrate 006D                 __Lrparam 0000         __size_of___aldiv 00CE  
   __end_of_PWM_Max_Duty 0A10         __size_of___ftdiv 00E6         __size_of___lldiv 0084  
       __size_of___ftmul 00F4         __size_of___fttol 00F4                 ___ftpack 07DA  
     i2___aldiv@quotient 000B                 ___lwtoft 0A4E         __size_of_sendMsg 000C  
               __ptext10 0A72                 __ptext11 0A8C                 __ptext20 07DA  
               __ptext12 0AF6                 __ptext21 09CC                 __ptext13 0AA6  
               __ptext22 070E                 __ptext14 0182                 __ptext23 0AFC  
               __ptext15 027A                 __ptext16 0A4E                 __ptext17 0372  
               __ptext18 0466                 __ptext19 055A       __end_of_init_USART 0974  
       __size_of_routine 017A                 _curvaDir 0A8C                 _curvaEsq 0A72  
          __size_of_main 003E            PWM1_duty@duty 0043                 int$flags 005D  
          PWM2_duty@duty 0043                 intlevel2 0000         ___lldiv@dividend 0060  
       ___lldiv@quotient 0068             ___aldiv@sign 0069    __size_of_PWM_Max_Duty 0044  
