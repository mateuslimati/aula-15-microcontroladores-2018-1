

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 17 16:49:17 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F870 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0015                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0017                     	;# 
    69  0018                     	;# 
    70  0019                     	;# 
    71  001A                     	;# 
    72  001E                     	;# 
    73  001F                     	;# 
    74  0081                     	;# 
    75  0085                     	;# 
    76  0086                     	;# 
    77  0087                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  0092                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  001A                     _RCREG	set	26
    93  0019                     _TXREG	set	25
    94  0006                     _PORTB	set	6
    95  0065                     _RCIF	set	101
    96  00C4                     _CREN	set	196
    97  00C6                     _RX9	set	198
    98  00C7                     _SPEN	set	199
    99  0099                     _SPBRG	set	153
   100  0086                     _TRISB	set	134
   101  04C1                     _TRMT	set	1217
   102  043F                     _TRISC7	set	1087
   103  043E                     _TRISC6	set	1086
   104  04C6                     _TX9	set	1222
   105  04C5                     _TXEN	set	1221
   106  04C4                     _SYNC	set	1220
   107  04C2                     _BRGH	set	1218
   108  0465                     _RCIE	set	1125
   109                           
   110                           ; #config settings
   111  0000                     
   112                           	psect	cinit
   113  07FE                     start_initialization:	
   114  07FE                     __initialization:	
   115  07FE                     end_of_initialization:	
   116                           ;End of C runtime variable initialization code
   117                           
   118  07FE                     __end_of__initialization:	
   119  07FE  0183               	clrf	3
   120  07FF  2EE3               	ljmp	_main	;jump to C main() function
   121                           
   122                           	psect	cstackCOMMON
   123  0070                     __pcstackCOMMON:	
   124  0070                     ?_UART_Write:	
   125  0070                     ??_UART_Write:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 1 bytes @ 0x0
   130                           
   131  0070                     ?___aldiv:	
   132                           ; 1 bytes @ 0x0
   133                           
   134  0070                     UART_Write@data:	
   135                           ; 4 bytes @ 0x0
   136                           
   137  0070                     ___aldiv@divisor:	
   138                           ; 1 bytes @ 0x0
   139                           
   140                           
   141                           ; 4 bytes @ 0x0
   142  0070                     	ds	4
   143  0074                     ___aldiv@dividend:	
   144                           
   145                           ; 4 bytes @ 0x4
   146  0074                     	ds	4
   147  0078                     ??___aldiv:	
   148                           
   149                           ; 1 bytes @ 0x8
   150  0078                     	ds	1
   151  0079                     UART_Init@x:	
   152                           
   153                           ; 2 bytes @ 0x9
   154  0079                     	ds	2
   155  007B                     ??_main:	
   156                           
   157                           	psect	cstackBANK0
   158  0020                     __pcstackBANK0:	
   159                           ; 1 bytes @ 0xB
   160                           
   161  0020                     ___aldiv@counter:	
   162                           
   163                           ; 1 bytes @ 0x0
   164  0020                     	ds	1
   165  0021                     ___aldiv@sign:	
   166                           
   167                           ; 1 bytes @ 0x1
   168  0021                     	ds	1
   169  0022                     ___aldiv@quotient:	
   170                           
   171                           ; 4 bytes @ 0x2
   172  0022                     	ds	4
   173  0026                     ?_UART_Init:	
   174  0026                     UART_Init@baudrate:	
   175                           ; 1 bytes @ 0x6
   176                           
   177                           
   178                           ; 4 bytes @ 0x6
   179  0026                     	ds	4
   180  002A                     ??_UART_Init:	
   181                           
   182                           ; 1 bytes @ 0xA
   183  002A                     	ds	12
   184                           
   185                           	psect	maintext
   186  06E3                     __pmaintext:	
   187 ;;
   188 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   189 ;;
   190 ;; *************** function _main *****************
   191 ;; Defined at:
   192 ;;		line 59 in file "main.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0, pclath, cstack
   201 ;; Tracked objects:
   202 ;;		On entry : B00/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMMON   BANK0   BANK1
   206 ;;      Params:         0       0       0
   207 ;;      Locals:         0       0       0
   208 ;;      Temps:          0       0       0
   209 ;;      Totals:         0       0       0
   210 ;;Total ram usage:        0 bytes
   211 ;; Hardware stack levels required when called:    2
   212 ;; This function calls:
   213 ;;		_UART_Init
   214 ;;		_UART_Write
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           
   221                           ;psect for function _main
   222  06E3                     _main:	
   223                           
   224                           ;main.c: 61: UART_Init(9600);
   225                           
   226                           ;incstack = 0
   227                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   228  06E3  3000               	movlw	0
   229  06E4  1283               	bcf	3,5	;RP0=0, select bank0
   230  06E5  1303               	bcf	3,6	;RP1=0, select bank0
   231  06E6  00A9               	movwf	UART_Init@baudrate+3
   232  06E7  3000               	movlw	0
   233  06E8  00A8               	movwf	UART_Init@baudrate+2
   234  06E9  3025               	movlw	37
   235  06EA  00A7               	movwf	UART_Init@baudrate+1
   236  06EB  3080               	movlw	128
   237  06EC  00A6               	movwf	UART_Init@baudrate
   238  06ED  26F7               	fcall	_UART_Init
   239  06EE                     l680:	
   240                           ;main.c: 64: while(1){
   241                           
   242                           
   243                           ;main.c: 65: if(RCIF == 1){
   244  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   245  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   246  06F0  1E8C               	btfss	12,5	;volatile
   247  06F1  2EEE               	goto	l680
   248                           
   249                           ;main.c: 66: RCIF = 0;
   250  06F2  128C               	bcf	12,5	;volatile
   251                           
   252                           ;main.c: 67: UART_Write(RCREG + 1);
   253  06F3  081A               	movf	26,w	;volatile
   254  06F4  3E01               	addlw	1
   255  06F5  26DA               	fcall	_UART_Write
   256  06F6  2EEE               	goto	l680
   257  06F7                     __end_of_main:	
   258                           
   259                           	psect	text1
   260  06DA                     __ptext1:	
   261 ;; *************** function _UART_Write *****************
   262 ;; Defined at:
   263 ;;		line 49 in file "main.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;  data            1    wreg     unsigned char 
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  data            1    0[COMMON] unsigned char 
   268 ;; Return value:  Size  Location     Type
   269 ;;                  1    wreg      void 
   270 ;; Registers used:
   271 ;;		wreg
   272 ;; Tracked objects:
   273 ;;		On entry : 0/0
   274 ;;		On exit  : 0/0
   275 ;;		Unchanged: 0/0
   276 ;; Data sizes:     COMMON   BANK0   BANK1
   277 ;;      Params:         0       0       0
   278 ;;      Locals:         0       0       0
   279 ;;      Temps:          0       0       0
   280 ;;      Totals:         0       0       0
   281 ;;Total ram usage:        0 bytes
   282 ;; Hardware stack levels used:    1
   283 ;; This function calls:
   284 ;;		Nothing
   285 ;; This function is called by:
   286 ;;		_main
   287 ;;		_UART_Write_Text
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function _UART_Write
   293  06DA                     _UART_Write:	
   294  06DA                     l40:	
   295                           ;main.c: 50: while(!TRMT);
   296                           
   297                           ;incstack = 0
   298                           ; Regs used in _UART_Write: [wreg]
   299                           
   300  06DA  1683               	bsf	3,5	;RP0=1, select bank1
   301  06DB  1303               	bcf	3,6	;RP1=0, select bank1
   302  06DC  1C98               	btfss	24,1	;volatile
   303  06DD  2EDA               	goto	l40
   304                           
   305                           ;main.c: 51: TXREG = 'c';
   306  06DE  3063               	movlw	99
   307  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   308  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   309  06E1  0099               	movwf	25	;volatile
   310  06E2  0008               	return
   311  06E3                     __end_of_UART_Write:	
   312                           
   313                           	psect	text2
   314  06F7                     __ptext2:	
   315 ;; *************** function _UART_Init *****************
   316 ;; Defined at:
   317 ;;		line 17 in file "main.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;  baudrate        4    6[BANK0 ] const long 
   320 ;; Auto vars:     Size  Location     Type
   321 ;;  x               2    9[COMMON] unsigned int 
   322 ;; Return value:  Size  Location     Type
   323 ;;                  1    wreg      unsigned char 
   324 ;; Registers used:
   325 ;;		wreg, status,2, status,0, pclath, cstack
   326 ;; Tracked objects:
   327 ;;		On entry : 0/0
   328 ;;		On exit  : 0/0
   329 ;;		Unchanged: 0/0
   330 ;; Data sizes:     COMMON   BANK0   BANK1
   331 ;;      Params:         0       4       0
   332 ;;      Locals:         2       0       0
   333 ;;      Temps:          0      12       0
   334 ;;      Totals:         2      16       0
   335 ;;Total ram usage:       18 bytes
   336 ;; Hardware stack levels used:    1
   337 ;; Hardware stack levels required when called:    1
   338 ;; This function calls:
   339 ;;		___aldiv
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _UART_Init
   347  06F7                     _UART_Init:	
   348                           
   349                           ;main.c: 19: TRISB = 0x00;
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
   353  06F7  1683               	bsf	3,5	;RP0=1, select bank1
   354  06F8  1303               	bcf	3,6	;RP1=0, select bank1
   355  06F9  0186               	clrf	6	;volatile
   356                           
   357                           ;main.c: 20: PORTB = 0x00;
   358  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   359  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   360  06FC  0186               	clrf	6	;volatile
   361                           
   362                           ;main.c: 22: unsigned int x;
   363                           ;main.c: 23: x = (16000000 - baudrate*64)/(baudrate*64);
   364  06FD  0826               	movf	UART_Init@baudrate,w
   365  06FE  00AA               	movwf	??_UART_Init
   366  06FF  0827               	movf	UART_Init@baudrate+1,w
   367  0700  00AB               	movwf	??_UART_Init+1
   368  0701  0828               	movf	UART_Init@baudrate+2,w
   369  0702  00AC               	movwf	??_UART_Init+2
   370  0703  0829               	movf	UART_Init@baudrate+3,w
   371  0704  00AD               	movwf	??_UART_Init+3
   372  0705  3006               	movlw	6
   373  0706                     u275:	
   374  0706  1003               	clrc
   375  0707  0DAA               	rlf	??_UART_Init,f
   376  0708  0DAB               	rlf	??_UART_Init+1,f
   377  0709  0DAC               	rlf	??_UART_Init+2,f
   378  070A  0DAD               	rlf	??_UART_Init+3,f
   379  070B  3EFF               	addlw	-1
   380  070C  1D03               	skipz
   381  070D  2F06               	goto	u275
   382  070E  082D               	movf	??_UART_Init+3,w
   383  070F  00F3               	movwf	___aldiv@divisor+3
   384  0710  082C               	movf	??_UART_Init+2,w
   385  0711  00F2               	movwf	___aldiv@divisor+2
   386  0712  082B               	movf	??_UART_Init+1,w
   387  0713  00F1               	movwf	___aldiv@divisor+1
   388  0714  082A               	movf	??_UART_Init,w
   389  0715  00F0               	movwf	___aldiv@divisor
   390  0716  3000               	movlw	0
   391  0717  00AE               	movwf	??_UART_Init+4
   392  0718  3024               	movlw	36
   393  0719  00AF               	movwf	??_UART_Init+5
   394  071A  30F4               	movlw	244
   395  071B  00B0               	movwf	??_UART_Init+6
   396  071C  3000               	movlw	0
   397  071D  00B1               	movwf	??_UART_Init+7
   398  071E  0826               	movf	UART_Init@baudrate,w
   399  071F  00B2               	movwf	??_UART_Init+8
   400  0720  0827               	movf	UART_Init@baudrate+1,w
   401  0721  00B3               	movwf	??_UART_Init+9
   402  0722  0828               	movf	UART_Init@baudrate+2,w
   403  0723  00B4               	movwf	??_UART_Init+10
   404  0724  0829               	movf	UART_Init@baudrate+3,w
   405  0725  00B5               	movwf	??_UART_Init+11
   406  0726  3006               	movlw	6
   407  0727                     u285:	
   408  0727  1003               	clrc
   409  0728  0DB2               	rlf	??_UART_Init+8,f
   410  0729  0DB3               	rlf	??_UART_Init+9,f
   411  072A  0DB4               	rlf	??_UART_Init+10,f
   412  072B  0DB5               	rlf	??_UART_Init+11,f
   413  072C  3EFF               	addlw	-1
   414  072D  1D03               	skipz
   415  072E  2F27               	goto	u285
   416  072F  09B2               	comf	??_UART_Init+8,f
   417  0730  09B3               	comf	??_UART_Init+9,f
   418  0731  09B4               	comf	??_UART_Init+10,f
   419  0732  09B5               	comf	??_UART_Init+11,f
   420  0733  0AB2               	incf	??_UART_Init+8,f
   421  0734  1903               	skipnz
   422  0735  0AB3               	incf	??_UART_Init+9,f
   423  0736  1903               	skipnz
   424  0737  0AB4               	incf	??_UART_Init+10,f
   425  0738  1903               	skipnz
   426  0739  0AB5               	incf	??_UART_Init+11,f
   427  073A  0832               	movf	??_UART_Init+8,w
   428  073B  07AE               	addwf	??_UART_Init+4,f
   429  073C  0833               	movf	??_UART_Init+9,w
   430  073D  1803               	skipnc
   431  073E  0F33               	incfsz	??_UART_Init+9,w
   432  073F  2F41               	goto	u290
   433  0740  2F42               	goto	u291
   434  0741                     u290:	
   435  0741  07AF               	addwf	??_UART_Init+5,f
   436  0742                     u291:	
   437  0742  0834               	movf	??_UART_Init+10,w
   438  0743  1803               	skipnc
   439  0744  0F34               	incfsz	??_UART_Init+10,w
   440  0745  2F47               	goto	u292
   441  0746  2F48               	goto	u293
   442  0747                     u292:	
   443  0747  07B0               	addwf	??_UART_Init+6,f
   444  0748                     u293:	
   445  0748  0835               	movf	??_UART_Init+11,w
   446  0749  1803               	skipnc
   447  074A  0A35               	incf	??_UART_Init+11,w
   448  074B  07B1               	addwf	??_UART_Init+7,f
   449  074C  0831               	movf	??_UART_Init+7,w
   450  074D  00F7               	movwf	___aldiv@dividend+3
   451  074E  0830               	movf	??_UART_Init+6,w
   452  074F  00F6               	movwf	___aldiv@dividend+2
   453  0750  082F               	movf	??_UART_Init+5,w
   454  0751  00F5               	movwf	___aldiv@dividend+1
   455  0752  082E               	movf	??_UART_Init+4,w
   456  0753  00F4               	movwf	___aldiv@dividend
   457  0754  276F               	fcall	___aldiv
   458  0755  0871               	movf	?___aldiv+1,w
   459  0756  00FA               	movwf	UART_Init@x+1
   460  0757  0870               	movf	?___aldiv,w
   461  0758  00F9               	movwf	UART_Init@x
   462                           
   463                           ;main.c: 24: RCIE = 0;
   464  0759  1683               	bsf	3,5	;RP0=1, select bank1
   465  075A  1303               	bcf	3,6	;RP1=0, select bank1
   466  075B  128C               	bcf	12,5	;volatile
   467                           
   468                           ;main.c: 27: SPBRG = x;
   469  075C  0879               	movf	UART_Init@x,w
   470  075D  0099               	movwf	25	;volatile
   471                           
   472                           ;main.c: 28: BRGH = 0;
   473  075E  1118               	bcf	24,2	;volatile
   474                           
   475                           ;main.c: 29: SYNC = 0;
   476  075F  1218               	bcf	24,4	;volatile
   477                           
   478                           ;main.c: 30: TXEN = 1;
   479  0760  1698               	bsf	24,5	;volatile
   480                           
   481                           ;main.c: 31: TX9 = 0;
   482  0761  1318               	bcf	24,6	;volatile
   483                           
   484                           ;main.c: 34: SPEN = 1;
   485  0762  1283               	bcf	3,5	;RP0=0, select bank0
   486  0763  1303               	bcf	3,6	;RP1=0, select bank0
   487  0764  1798               	bsf	24,7	;volatile
   488                           
   489                           ;main.c: 35: RX9 = 0;
   490  0765  1318               	bcf	24,6	;volatile
   491                           
   492                           ;main.c: 36: CREN = 1;
   493  0766  1618               	bsf	24,4	;volatile
   494                           
   495                           ;main.c: 39: TRISC6 = 1;
   496  0767  1683               	bsf	3,5	;RP0=1, select bank1
   497  0768  1303               	bcf	3,6	;RP1=0, select bank1
   498  0769  1707               	bsf	7,6	;volatile
   499                           
   500                           ;main.c: 40: TRISC7 = 1;
   501  076A  1787               	bsf	7,7	;volatile
   502                           
   503                           ;main.c: 42: RCIF = 0;
   504  076B  1283               	bcf	3,5	;RP0=0, select bank0
   505  076C  1303               	bcf	3,6	;RP1=0, select bank0
   506  076D  128C               	bcf	12,5	;volatile
   507  076E  0008               	return
   508  076F                     __end_of_UART_Init:	
   509                           ;main.c: 45: return 1;
   510                           ;	Return value of _UART_Init is never used
   511                           
   512                           
   513                           	psect	text3
   514  076F                     __ptext3:	
   515 ;; *************** function ___aldiv *****************
   516 ;; Defined at:
   517 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;  divisor         4    0[COMMON] long 
   520 ;;  dividend        4    4[COMMON] long 
   521 ;; Auto vars:     Size  Location     Type
   522 ;;  quotient        4    2[BANK0 ] long 
   523 ;;  sign            1    1[BANK0 ] unsigned char 
   524 ;;  counter         1    0[BANK0 ] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  4    0[COMMON] long 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1
   534 ;;      Params:         8       0       0
   535 ;;      Locals:         0       6       0
   536 ;;      Temps:          1       0       0
   537 ;;      Totals:         9       6       0
   538 ;;Total ram usage:       15 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_UART_Init
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function ___aldiv
   549  076F                     ___aldiv:	
   550                           
   551                           ;incstack = 0
   552                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   553  076F  1283               	bcf	3,5	;RP0=0, select bank0
   554  0770  1303               	bcf	3,6	;RP1=0, select bank0
   555  0771  01A1               	clrf	___aldiv@sign
   556  0772  1FF3               	btfss	___aldiv@divisor+3,7
   557  0773  2F81               	goto	l197
   558  0774  09F0               	comf	___aldiv@divisor,f
   559  0775  09F1               	comf	___aldiv@divisor+1,f
   560  0776  09F2               	comf	___aldiv@divisor+2,f
   561  0777  09F3               	comf	___aldiv@divisor+3,f
   562  0778  0AF0               	incf	___aldiv@divisor,f
   563  0779  1903               	skipnz
   564  077A  0AF1               	incf	___aldiv@divisor+1,f
   565  077B  1903               	skipnz
   566  077C  0AF2               	incf	___aldiv@divisor+2,f
   567  077D  1903               	skipnz
   568  077E  0AF3               	incf	___aldiv@divisor+3,f
   569  077F  01A1               	clrf	___aldiv@sign
   570  0780  0AA1               	incf	___aldiv@sign,f
   571  0781                     l197:	
   572  0781  1FF7               	btfss	___aldiv@dividend+3,7
   573  0782  2F92               	goto	l618
   574  0783  09F4               	comf	___aldiv@dividend,f
   575  0784  09F5               	comf	___aldiv@dividend+1,f
   576  0785  09F6               	comf	___aldiv@dividend+2,f
   577  0786  09F7               	comf	___aldiv@dividend+3,f
   578  0787  0AF4               	incf	___aldiv@dividend,f
   579  0788  1903               	skipnz
   580  0789  0AF5               	incf	___aldiv@dividend+1,f
   581  078A  1903               	skipnz
   582  078B  0AF6               	incf	___aldiv@dividend+2,f
   583  078C  1903               	skipnz
   584  078D  0AF7               	incf	___aldiv@dividend+3,f
   585  078E  3001               	movlw	1
   586  078F  00F8               	movwf	??___aldiv
   587  0790  0878               	movf	??___aldiv,w
   588  0791  06A1               	xorwf	___aldiv@sign,f
   589  0792                     l618:	
   590  0792  3000               	movlw	0
   591  0793  00A5               	movwf	___aldiv@quotient+3
   592  0794  3000               	movlw	0
   593  0795  00A4               	movwf	___aldiv@quotient+2
   594  0796  3000               	movlw	0
   595  0797  00A3               	movwf	___aldiv@quotient+1
   596  0798  3000               	movlw	0
   597  0799  00A2               	movwf	___aldiv@quotient
   598  079A  0873               	movf	___aldiv@divisor+3,w
   599  079B  0472               	iorwf	___aldiv@divisor+2,w
   600  079C  0471               	iorwf	___aldiv@divisor+1,w
   601  079D  0470               	iorwf	___aldiv@divisor,w
   602  079E  1903               	skipnz
   603  079F  2FE7               	goto	l640
   604  07A0  01A0               	clrf	___aldiv@counter
   605  07A1  0AA0               	incf	___aldiv@counter,f
   606  07A2                     l626:	
   607  07A2  1BF3               	btfsc	___aldiv@divisor+3,7
   608  07A3  2FB2               	goto	l628
   609  07A4  3001               	movlw	1
   610  07A5  00F8               	movwf	??___aldiv
   611  07A6                     u205:	
   612  07A6  1003               	clrc
   613  07A7  0DF0               	rlf	___aldiv@divisor,f
   614  07A8  0DF1               	rlf	___aldiv@divisor+1,f
   615  07A9  0DF2               	rlf	___aldiv@divisor+2,f
   616  07AA  0DF3               	rlf	___aldiv@divisor+3,f
   617  07AB  0BF8               	decfsz	??___aldiv,f
   618  07AC  2FA6               	goto	u205
   619  07AD  3001               	movlw	1
   620  07AE  00F8               	movwf	??___aldiv
   621  07AF  0878               	movf	??___aldiv,w
   622  07B0  07A0               	addwf	___aldiv@counter,f
   623  07B1  2FA2               	goto	l626
   624  07B2                     l628:	
   625  07B2  3001               	movlw	1
   626  07B3  00F8               	movwf	??___aldiv
   627  07B4                     u225:	
   628  07B4  1003               	clrc
   629  07B5  0DA2               	rlf	___aldiv@quotient,f
   630  07B6  0DA3               	rlf	___aldiv@quotient+1,f
   631  07B7  0DA4               	rlf	___aldiv@quotient+2,f
   632  07B8  0DA5               	rlf	___aldiv@quotient+3,f
   633  07B9  0BF8               	decfsz	??___aldiv,f
   634  07BA  2FB4               	goto	u225
   635  07BB  0873               	movf	___aldiv@divisor+3,w
   636  07BC  0277               	subwf	___aldiv@dividend+3,w
   637  07BD  1D03               	skipz
   638  07BE  2FC9               	goto	u235
   639  07BF  0872               	movf	___aldiv@divisor+2,w
   640  07C0  0276               	subwf	___aldiv@dividend+2,w
   641  07C1  1D03               	skipz
   642  07C2  2FC9               	goto	u235
   643  07C3  0871               	movf	___aldiv@divisor+1,w
   644  07C4  0275               	subwf	___aldiv@dividend+1,w
   645  07C5  1D03               	skipz
   646  07C6  2FC9               	goto	u235
   647  07C7  0870               	movf	___aldiv@divisor,w
   648  07C8  0274               	subwf	___aldiv@dividend,w
   649  07C9                     u235:	
   650  07C9  1C03               	skipc
   651  07CA  2FDA               	goto	l636
   652  07CB  0870               	movf	___aldiv@divisor,w
   653  07CC  02F4               	subwf	___aldiv@dividend,f
   654  07CD  0871               	movf	___aldiv@divisor+1,w
   655  07CE  1C03               	skipc
   656  07CF  0F71               	incfsz	___aldiv@divisor+1,w
   657  07D0  02F5               	subwf	___aldiv@dividend+1,f
   658  07D1  0872               	movf	___aldiv@divisor+2,w
   659  07D2  1C03               	skipc
   660  07D3  0F72               	incfsz	___aldiv@divisor+2,w
   661  07D4  02F6               	subwf	___aldiv@dividend+2,f
   662  07D5  0873               	movf	___aldiv@divisor+3,w
   663  07D6  1C03               	skipc
   664  07D7  0F73               	incfsz	___aldiv@divisor+3,w
   665  07D8  02F7               	subwf	___aldiv@dividend+3,f
   666  07D9  1422               	bsf	___aldiv@quotient,0
   667  07DA                     l636:	
   668  07DA  3001               	movlw	1
   669  07DB                     u245:	
   670  07DB  1003               	clrc
   671  07DC  0CF3               	rrf	___aldiv@divisor+3,f
   672  07DD  0CF2               	rrf	___aldiv@divisor+2,f
   673  07DE  0CF1               	rrf	___aldiv@divisor+1,f
   674  07DF  0CF0               	rrf	___aldiv@divisor,f
   675  07E0  3EFF               	addlw	-1
   676  07E1  1D03               	skipz
   677  07E2  2FDB               	goto	u245
   678  07E3  3001               	movlw	1
   679  07E4  02A0               	subwf	___aldiv@counter,f
   680  07E5  1D03               	btfss	3,2
   681  07E6  2FB2               	goto	l628
   682  07E7                     l640:	
   683  07E7  0821               	movf	___aldiv@sign,w
   684  07E8  1903               	btfsc	3,2
   685  07E9  2FF5               	goto	l644
   686  07EA  09A2               	comf	___aldiv@quotient,f
   687  07EB  09A3               	comf	___aldiv@quotient+1,f
   688  07EC  09A4               	comf	___aldiv@quotient+2,f
   689  07ED  09A5               	comf	___aldiv@quotient+3,f
   690  07EE  0AA2               	incf	___aldiv@quotient,f
   691  07EF  1903               	skipnz
   692  07F0  0AA3               	incf	___aldiv@quotient+1,f
   693  07F1  1903               	skipnz
   694  07F2  0AA4               	incf	___aldiv@quotient+2,f
   695  07F3  1903               	skipnz
   696  07F4  0AA5               	incf	___aldiv@quotient+3,f
   697  07F5                     l644:	
   698  07F5  0825               	movf	___aldiv@quotient+3,w
   699  07F6  00F3               	movwf	?___aldiv+3
   700  07F7  0824               	movf	___aldiv@quotient+2,w
   701  07F8  00F2               	movwf	?___aldiv+2
   702  07F9  0823               	movf	___aldiv@quotient+1,w
   703  07FA  00F1               	movwf	?___aldiv+1
   704  07FB  0822               	movf	___aldiv@quotient,w
   705  07FC  00F0               	movwf	?___aldiv
   706  07FD  0008               	return
   707  07FE                     __end_of___aldiv:	
   708  007E                     btemp	set	126	;btemp
   709  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     22      22
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     526
                          _UART_Init
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     526
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 17 16:49:17 2018

            __CFG_CP$OFF 0000                       l40 06DA                      l197 0781  
                    l640 07E7                      l626 07A2                      l618 0792  
                    l644 07F5                      l636 07DA                      l628 07B2  
                    l680 06EE                      u205 07A6                      u225 07B4  
                    u235 07C9                      u245 07DB                      u290 0741  
           __CFG_CPD$OFF 0000                      u291 0742                      u275 0706  
                    u292 0747                      u293 0748                      u285 0727  
                    _RX9 00C6                      _TX9 04C6             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     _BRGH 04C2                     _CREN 00C4  
                   _RCIE 0465                     _RCIF 0065                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
           __CFG_WRT$OFF 0000                     _main 06E3                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000          __end_of___aldiv 07FE  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019              ?_UART_Write 0070       __size_of_UART_Init 0078  
                  status 0003                    wtemp0 007E          __initialization 07FE  
           __end_of_main 06F7                   ??_main 007B                   _TRISC6 043E  
                 _TRISC7 043F           __CFG_PWRTE$OFF 0000        __end_of_UART_Init 076F  
    __size_of_UART_Write 0009                ??___aldiv 0078  __end_of__initialization 07FE  
         __pcstackCOMMON 0070               __pmaintext 06E3             ??_UART_Write 0070  
                ___aldiv 076F       __end_of_UART_Write 06E3                  __ptext1 06DA  
                __ptext2 06F7                  __ptext3 076F         ___aldiv@dividend 0074  
   end_of_initialization 07FE         ___aldiv@quotient 0022                _UART_Init 06F7  
         UART_Write@data 0070               ?_UART_Init 0026      start_initialization 07FE  
              ___latbits 0000            __pcstackBANK0 0020                 ?___aldiv 0070  
            ??_UART_Init 002A               UART_Init@x 0079          ___aldiv@divisor 0070  
        ___aldiv@counter 0020        UART_Init@baudrate 0026         __size_of___aldiv 008F  
          __size_of_main 0014             ___aldiv@sign 0021               _UART_Write 06DA  
